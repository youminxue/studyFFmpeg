// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dynaDnnDetect.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dynaDnnDetect_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dynaDnnDetect_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "davStreamletSetting.pb.h"
#include "appGlobalSetting.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dynaDnnDetect_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dynaDnnDetect_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dynaDnnDetect_2eproto;
namespace DynaDnnDetect {
class DnnDetectSetting;
class DnnDetectSettingDefaultTypeInternal;
extern DnnDetectSettingDefaultTypeInternal _DnnDetectSetting_default_instance_;
class DynaDetectGlobalSetting;
class DynaDetectGlobalSettingDefaultTypeInternal;
extern DynaDetectGlobalSettingDefaultTypeInternal _DynaDetectGlobalSetting_default_instance_;
class DynaDnnDetectTaskConfig;
class DynaDnnDetectTaskConfigDefaultTypeInternal;
extern DynaDnnDetectTaskConfigDefaultTypeInternal _DynaDnnDetectTaskConfig_default_instance_;
class DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse;
class DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUseDefaultTypeInternal;
extern DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUseDefaultTypeInternal _DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse_default_instance_;
}  // namespace DynaDnnDetect
PROTOBUF_NAMESPACE_OPEN
template<> ::DynaDnnDetect::DnnDetectSetting* Arena::CreateMaybeMessage<::DynaDnnDetect::DnnDetectSetting>(Arena*);
template<> ::DynaDnnDetect::DynaDetectGlobalSetting* Arena::CreateMaybeMessage<::DynaDnnDetect::DynaDetectGlobalSetting>(Arena*);
template<> ::DynaDnnDetect::DynaDnnDetectTaskConfig* Arena::CreateMaybeMessage<::DynaDnnDetect::DynaDnnDetectTaskConfig>(Arena*);
template<> ::DynaDnnDetect::DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse* Arena::CreateMaybeMessage<::DynaDnnDetect::DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace DynaDnnDetect {

// ===================================================================

class DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse, 
    std::string, ::DynaDnnDetect::DnnDetectSetting,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse, 
    std::string, ::DynaDnnDetect::DnnDetectSetting,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse();
  DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse& other);
  static const DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse*>(&_DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "DynaDnnDetect.DynaDnnDetectTaskConfig.DnnDetectorSettingsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dynaDnnDetect_2eproto);
    return ::descriptor_table_dynaDnnDetect_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class DynaDnnDetectTaskConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DynaDnnDetect.DynaDnnDetectTaskConfig) */ {
 public:
  DynaDnnDetectTaskConfig();
  virtual ~DynaDnnDetectTaskConfig();

  DynaDnnDetectTaskConfig(const DynaDnnDetectTaskConfig& from);
  DynaDnnDetectTaskConfig(DynaDnnDetectTaskConfig&& from) noexcept
    : DynaDnnDetectTaskConfig() {
    *this = ::std::move(from);
  }

  inline DynaDnnDetectTaskConfig& operator=(const DynaDnnDetectTaskConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DynaDnnDetectTaskConfig& operator=(DynaDnnDetectTaskConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DynaDnnDetectTaskConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DynaDnnDetectTaskConfig* internal_default_instance() {
    return reinterpret_cast<const DynaDnnDetectTaskConfig*>(
               &_DynaDnnDetectTaskConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DynaDnnDetectTaskConfig& a, DynaDnnDetectTaskConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(DynaDnnDetectTaskConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DynaDnnDetectTaskConfig* New() const final {
    return CreateMaybeMessage<DynaDnnDetectTaskConfig>(nullptr);
  }

  DynaDnnDetectTaskConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DynaDnnDetectTaskConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DynaDnnDetectTaskConfig& from);
  void MergeFrom(const DynaDnnDetectTaskConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DynaDnnDetectTaskConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DynaDnnDetect.DynaDnnDetectTaskConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dynaDnnDetect_2eproto);
    return ::descriptor_table_dynaDnnDetect_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDnnDetectorSettingsFieldNumber = 12,
    kAppGlobalSettingFieldNumber = 1,
    kDynaDetectGlobalSettingFieldNumber = 2,
    kInputSettingFieldNumber = 10,
    kOutputSettingFieldNumber = 11,
  };
  // map<string, .DynaDnnDetect.DnnDetectSetting> dnn_detector_settings = 12;
  int dnn_detector_settings_size() const;
  private:
  int _internal_dnn_detector_settings_size() const;
  public:
  void clear_dnn_detector_settings();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >&
      _internal_dnn_detector_settings() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >*
      _internal_mutable_dnn_detector_settings();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >&
      dnn_detector_settings() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >*
      mutable_dnn_detector_settings();

  // .AppGlobalSetting.GlobalSetting app_global_setting = 1;
  bool has_app_global_setting() const;
  private:
  bool _internal_has_app_global_setting() const;
  public:
  void clear_app_global_setting();
  const ::AppGlobalSetting::GlobalSetting& app_global_setting() const;
  ::AppGlobalSetting::GlobalSetting* release_app_global_setting();
  ::AppGlobalSetting::GlobalSetting* mutable_app_global_setting();
  void set_allocated_app_global_setting(::AppGlobalSetting::GlobalSetting* app_global_setting);
  private:
  const ::AppGlobalSetting::GlobalSetting& _internal_app_global_setting() const;
  ::AppGlobalSetting::GlobalSetting* _internal_mutable_app_global_setting();
  public:

  // .DynaDnnDetect.DynaDetectGlobalSetting dyna_detect_global_setting = 2;
  bool has_dyna_detect_global_setting() const;
  private:
  bool _internal_has_dyna_detect_global_setting() const;
  public:
  void clear_dyna_detect_global_setting();
  const ::DynaDnnDetect::DynaDetectGlobalSetting& dyna_detect_global_setting() const;
  ::DynaDnnDetect::DynaDetectGlobalSetting* release_dyna_detect_global_setting();
  ::DynaDnnDetect::DynaDetectGlobalSetting* mutable_dyna_detect_global_setting();
  void set_allocated_dyna_detect_global_setting(::DynaDnnDetect::DynaDetectGlobalSetting* dyna_detect_global_setting);
  private:
  const ::DynaDnnDetect::DynaDetectGlobalSetting& _internal_dyna_detect_global_setting() const;
  ::DynaDnnDetect::DynaDetectGlobalSetting* _internal_mutable_dyna_detect_global_setting();
  public:

  // .DavStreamletSetting.InputStreamletSetting input_setting = 10;
  bool has_input_setting() const;
  private:
  bool _internal_has_input_setting() const;
  public:
  void clear_input_setting();
  const ::DavStreamletSetting::InputStreamletSetting& input_setting() const;
  ::DavStreamletSetting::InputStreamletSetting* release_input_setting();
  ::DavStreamletSetting::InputStreamletSetting* mutable_input_setting();
  void set_allocated_input_setting(::DavStreamletSetting::InputStreamletSetting* input_setting);
  private:
  const ::DavStreamletSetting::InputStreamletSetting& _internal_input_setting() const;
  ::DavStreamletSetting::InputStreamletSetting* _internal_mutable_input_setting();
  public:

  // .DavStreamletSetting.OutputStreamletSetting output_setting = 11;
  bool has_output_setting() const;
  private:
  bool _internal_has_output_setting() const;
  public:
  void clear_output_setting();
  const ::DavStreamletSetting::OutputStreamletSetting& output_setting() const;
  ::DavStreamletSetting::OutputStreamletSetting* release_output_setting();
  ::DavStreamletSetting::OutputStreamletSetting* mutable_output_setting();
  void set_allocated_output_setting(::DavStreamletSetting::OutputStreamletSetting* output_setting);
  private:
  const ::DavStreamletSetting::OutputStreamletSetting& _internal_output_setting() const;
  ::DavStreamletSetting::OutputStreamletSetting* _internal_mutable_output_setting();
  public:

  // @@protoc_insertion_point(class_scope:DynaDnnDetect.DynaDnnDetectTaskConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DynaDnnDetectTaskConfig_DnnDetectorSettingsEntry_DoNotUse,
      std::string, ::DynaDnnDetect::DnnDetectSetting,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > dnn_detector_settings_;
  ::AppGlobalSetting::GlobalSetting* app_global_setting_;
  ::DynaDnnDetect::DynaDetectGlobalSetting* dyna_detect_global_setting_;
  ::DavStreamletSetting::InputStreamletSetting* input_setting_;
  ::DavStreamletSetting::OutputStreamletSetting* output_setting_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dynaDnnDetect_2eproto;
};
// -------------------------------------------------------------------

class DynaDetectGlobalSetting :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DynaDnnDetect.DynaDetectGlobalSetting) */ {
 public:
  DynaDetectGlobalSetting();
  virtual ~DynaDetectGlobalSetting();

  DynaDetectGlobalSetting(const DynaDetectGlobalSetting& from);
  DynaDetectGlobalSetting(DynaDetectGlobalSetting&& from) noexcept
    : DynaDetectGlobalSetting() {
    *this = ::std::move(from);
  }

  inline DynaDetectGlobalSetting& operator=(const DynaDetectGlobalSetting& from) {
    CopyFrom(from);
    return *this;
  }
  inline DynaDetectGlobalSetting& operator=(DynaDetectGlobalSetting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DynaDetectGlobalSetting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DynaDetectGlobalSetting* internal_default_instance() {
    return reinterpret_cast<const DynaDetectGlobalSetting*>(
               &_DynaDetectGlobalSetting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DynaDetectGlobalSetting& a, DynaDetectGlobalSetting& b) {
    a.Swap(&b);
  }
  inline void Swap(DynaDetectGlobalSetting* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DynaDetectGlobalSetting* New() const final {
    return CreateMaybeMessage<DynaDetectGlobalSetting>(nullptr);
  }

  DynaDetectGlobalSetting* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DynaDetectGlobalSetting>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DynaDetectGlobalSetting& from);
  void MergeFrom(const DynaDetectGlobalSetting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DynaDetectGlobalSetting* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DynaDnnDetect.DynaDetectGlobalSetting";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dynaDnnDetect_2eproto);
    return ::descriptor_table_dynaDnnDetect_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputUrlFieldNumber = 3,
    kOutputUrlFieldNumber = 4,
    kMaxDetectorsFieldNumber = 1,
    kMaxBufNumOfDetectStreamletFieldNumber = 2,
  };
  // string input_url = 3;
  void clear_input_url();
  const std::string& input_url() const;
  void set_input_url(const std::string& value);
  void set_input_url(std::string&& value);
  void set_input_url(const char* value);
  void set_input_url(const char* value, size_t size);
  std::string* mutable_input_url();
  std::string* release_input_url();
  void set_allocated_input_url(std::string* input_url);
  private:
  const std::string& _internal_input_url() const;
  void _internal_set_input_url(const std::string& value);
  std::string* _internal_mutable_input_url();
  public:

  // string output_url = 4;
  void clear_output_url();
  const std::string& output_url() const;
  void set_output_url(const std::string& value);
  void set_output_url(std::string&& value);
  void set_output_url(const char* value);
  void set_output_url(const char* value, size_t size);
  std::string* mutable_output_url();
  std::string* release_output_url();
  void set_allocated_output_url(std::string* output_url);
  private:
  const std::string& _internal_output_url() const;
  void _internal_set_output_url(const std::string& value);
  std::string* _internal_mutable_output_url();
  public:

  // int32 max_detectors = 1;
  void clear_max_detectors();
  ::PROTOBUF_NAMESPACE_ID::int32 max_detectors() const;
  void set_max_detectors(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_detectors() const;
  void _internal_set_max_detectors(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_buf_num_of_detect_streamlet = 2;
  void clear_max_buf_num_of_detect_streamlet();
  ::PROTOBUF_NAMESPACE_ID::int32 max_buf_num_of_detect_streamlet() const;
  void set_max_buf_num_of_detect_streamlet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_buf_num_of_detect_streamlet() const;
  void _internal_set_max_buf_num_of_detect_streamlet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DynaDnnDetect.DynaDetectGlobalSetting)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_url_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_detectors_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_buf_num_of_detect_streamlet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dynaDnnDetect_2eproto;
};
// -------------------------------------------------------------------

class DnnDetectSetting :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DynaDnnDetect.DnnDetectSetting) */ {
 public:
  DnnDetectSetting();
  virtual ~DnnDetectSetting();

  DnnDetectSetting(const DnnDetectSetting& from);
  DnnDetectSetting(DnnDetectSetting&& from) noexcept
    : DnnDetectSetting() {
    *this = ::std::move(from);
  }

  inline DnnDetectSetting& operator=(const DnnDetectSetting& from) {
    CopyFrom(from);
    return *this;
  }
  inline DnnDetectSetting& operator=(DnnDetectSetting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DnnDetectSetting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DnnDetectSetting* internal_default_instance() {
    return reinterpret_cast<const DnnDetectSetting*>(
               &_DnnDetectSetting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DnnDetectSetting& a, DnnDetectSetting& b) {
    a.Swap(&b);
  }
  inline void Swap(DnnDetectSetting* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DnnDetectSetting* New() const final {
    return CreateMaybeMessage<DnnDetectSetting>(nullptr);
  }

  DnnDetectSetting* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DnnDetectSetting>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DnnDetectSetting& from);
  void MergeFrom(const DnnDetectSetting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DnnDetectSetting* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DynaDnnDetect.DnnDetectSetting";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dynaDnnDetect_2eproto);
    return ::descriptor_table_dynaDnnDetect_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeansFieldNumber = 12,
    kDetectorTypeFieldNumber = 1,
    kDetectorFrameworkTagFieldNumber = 2,
    kModelPathFieldNumber = 3,
    kConfigPathFieldNumber = 4,
    kClassnamePathFieldNumber = 5,
    kBackendIdFieldNumber = 6,
    kTargetIdFieldNumber = 7,
    kScaleFactorFieldNumber = 11,
    kWidthFieldNumber = 14,
    kHeightFieldNumber = 15,
    kConfThresholdFieldNumber = 16,
    kSwapRbFieldNumber = 13,
    kEnableFieldNumber = 20,
    kDetectIntervalFieldNumber = 17,
  };
  // repeated float means = 12;
  int means_size() const;
  private:
  int _internal_means_size() const;
  public:
  void clear_means();
  private:
  float _internal_means(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_means() const;
  void _internal_add_means(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_means();
  public:
  float means(int index) const;
  void set_means(int index, float value);
  void add_means(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      means() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_means();

  // string detector_type = 1;
  void clear_detector_type();
  const std::string& detector_type() const;
  void set_detector_type(const std::string& value);
  void set_detector_type(std::string&& value);
  void set_detector_type(const char* value);
  void set_detector_type(const char* value, size_t size);
  std::string* mutable_detector_type();
  std::string* release_detector_type();
  void set_allocated_detector_type(std::string* detector_type);
  private:
  const std::string& _internal_detector_type() const;
  void _internal_set_detector_type(const std::string& value);
  std::string* _internal_mutable_detector_type();
  public:

  // string detector_framework_tag = 2;
  void clear_detector_framework_tag();
  const std::string& detector_framework_tag() const;
  void set_detector_framework_tag(const std::string& value);
  void set_detector_framework_tag(std::string&& value);
  void set_detector_framework_tag(const char* value);
  void set_detector_framework_tag(const char* value, size_t size);
  std::string* mutable_detector_framework_tag();
  std::string* release_detector_framework_tag();
  void set_allocated_detector_framework_tag(std::string* detector_framework_tag);
  private:
  const std::string& _internal_detector_framework_tag() const;
  void _internal_set_detector_framework_tag(const std::string& value);
  std::string* _internal_mutable_detector_framework_tag();
  public:

  // string model_path = 3;
  void clear_model_path();
  const std::string& model_path() const;
  void set_model_path(const std::string& value);
  void set_model_path(std::string&& value);
  void set_model_path(const char* value);
  void set_model_path(const char* value, size_t size);
  std::string* mutable_model_path();
  std::string* release_model_path();
  void set_allocated_model_path(std::string* model_path);
  private:
  const std::string& _internal_model_path() const;
  void _internal_set_model_path(const std::string& value);
  std::string* _internal_mutable_model_path();
  public:

  // string config_path = 4;
  void clear_config_path();
  const std::string& config_path() const;
  void set_config_path(const std::string& value);
  void set_config_path(std::string&& value);
  void set_config_path(const char* value);
  void set_config_path(const char* value, size_t size);
  std::string* mutable_config_path();
  std::string* release_config_path();
  void set_allocated_config_path(std::string* config_path);
  private:
  const std::string& _internal_config_path() const;
  void _internal_set_config_path(const std::string& value);
  std::string* _internal_mutable_config_path();
  public:

  // string classname_path = 5;
  void clear_classname_path();
  const std::string& classname_path() const;
  void set_classname_path(const std::string& value);
  void set_classname_path(std::string&& value);
  void set_classname_path(const char* value);
  void set_classname_path(const char* value, size_t size);
  std::string* mutable_classname_path();
  std::string* release_classname_path();
  void set_allocated_classname_path(std::string* classname_path);
  private:
  const std::string& _internal_classname_path() const;
  void _internal_set_classname_path(const std::string& value);
  std::string* _internal_mutable_classname_path();
  public:

  // int32 backend_id = 6;
  void clear_backend_id();
  ::PROTOBUF_NAMESPACE_ID::int32 backend_id() const;
  void set_backend_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_backend_id() const;
  void _internal_set_backend_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 target_id = 7;
  void clear_target_id();
  ::PROTOBUF_NAMESPACE_ID::int32 target_id() const;
  void set_target_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_id() const;
  void _internal_set_target_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float scale_factor = 11;
  void clear_scale_factor();
  float scale_factor() const;
  void set_scale_factor(float value);
  private:
  float _internal_scale_factor() const;
  void _internal_set_scale_factor(float value);
  public:

  // int32 width = 14;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::int32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 height = 15;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::int32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float conf_threshold = 16;
  void clear_conf_threshold();
  float conf_threshold() const;
  void set_conf_threshold(float value);
  private:
  float _internal_conf_threshold() const;
  void _internal_set_conf_threshold(float value);
  public:

  // bool swap_rb = 13;
  void clear_swap_rb();
  bool swap_rb() const;
  void set_swap_rb(bool value);
  private:
  bool _internal_swap_rb() const;
  void _internal_set_swap_rb(bool value);
  public:

  // bool enable = 20;
  void clear_enable();
  bool enable() const;
  void set_enable(bool value);
  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);
  public:

  // int32 detect_interval = 17;
  void clear_detect_interval();
  ::PROTOBUF_NAMESPACE_ID::int32 detect_interval() const;
  void set_detect_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_detect_interval() const;
  void _internal_set_detect_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DynaDnnDetect.DnnDetectSetting)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > means_;
  mutable std::atomic<int> _means_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr detector_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr detector_framework_tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr config_path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr classname_path_;
  ::PROTOBUF_NAMESPACE_ID::int32 backend_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_id_;
  float scale_factor_;
  ::PROTOBUF_NAMESPACE_ID::int32 width_;
  ::PROTOBUF_NAMESPACE_ID::int32 height_;
  float conf_threshold_;
  bool swap_rb_;
  bool enable_;
  ::PROTOBUF_NAMESPACE_ID::int32 detect_interval_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dynaDnnDetect_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DynaDnnDetectTaskConfig

// .AppGlobalSetting.GlobalSetting app_global_setting = 1;
inline bool DynaDnnDetectTaskConfig::_internal_has_app_global_setting() const {
  return this != internal_default_instance() && app_global_setting_ != nullptr;
}
inline bool DynaDnnDetectTaskConfig::has_app_global_setting() const {
  return _internal_has_app_global_setting();
}
inline const ::AppGlobalSetting::GlobalSetting& DynaDnnDetectTaskConfig::_internal_app_global_setting() const {
  const ::AppGlobalSetting::GlobalSetting* p = app_global_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::AppGlobalSetting::GlobalSetting*>(
      &::AppGlobalSetting::_GlobalSetting_default_instance_);
}
inline const ::AppGlobalSetting::GlobalSetting& DynaDnnDetectTaskConfig::app_global_setting() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDnnDetectTaskConfig.app_global_setting)
  return _internal_app_global_setting();
}
inline ::AppGlobalSetting::GlobalSetting* DynaDnnDetectTaskConfig::release_app_global_setting() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DynaDnnDetectTaskConfig.app_global_setting)
  
  ::AppGlobalSetting::GlobalSetting* temp = app_global_setting_;
  app_global_setting_ = nullptr;
  return temp;
}
inline ::AppGlobalSetting::GlobalSetting* DynaDnnDetectTaskConfig::_internal_mutable_app_global_setting() {
  
  if (app_global_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::AppGlobalSetting::GlobalSetting>(GetArenaNoVirtual());
    app_global_setting_ = p;
  }
  return app_global_setting_;
}
inline ::AppGlobalSetting::GlobalSetting* DynaDnnDetectTaskConfig::mutable_app_global_setting() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DynaDnnDetectTaskConfig.app_global_setting)
  return _internal_mutable_app_global_setting();
}
inline void DynaDnnDetectTaskConfig::set_allocated_app_global_setting(::AppGlobalSetting::GlobalSetting* app_global_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(app_global_setting_);
  }
  if (app_global_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      app_global_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, app_global_setting, submessage_arena);
    }
    
  } else {
    
  }
  app_global_setting_ = app_global_setting;
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DynaDnnDetectTaskConfig.app_global_setting)
}

// .DynaDnnDetect.DynaDetectGlobalSetting dyna_detect_global_setting = 2;
inline bool DynaDnnDetectTaskConfig::_internal_has_dyna_detect_global_setting() const {
  return this != internal_default_instance() && dyna_detect_global_setting_ != nullptr;
}
inline bool DynaDnnDetectTaskConfig::has_dyna_detect_global_setting() const {
  return _internal_has_dyna_detect_global_setting();
}
inline void DynaDnnDetectTaskConfig::clear_dyna_detect_global_setting() {
  if (GetArenaNoVirtual() == nullptr && dyna_detect_global_setting_ != nullptr) {
    delete dyna_detect_global_setting_;
  }
  dyna_detect_global_setting_ = nullptr;
}
inline const ::DynaDnnDetect::DynaDetectGlobalSetting& DynaDnnDetectTaskConfig::_internal_dyna_detect_global_setting() const {
  const ::DynaDnnDetect::DynaDetectGlobalSetting* p = dyna_detect_global_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DynaDnnDetect::DynaDetectGlobalSetting*>(
      &::DynaDnnDetect::_DynaDetectGlobalSetting_default_instance_);
}
inline const ::DynaDnnDetect::DynaDetectGlobalSetting& DynaDnnDetectTaskConfig::dyna_detect_global_setting() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDnnDetectTaskConfig.dyna_detect_global_setting)
  return _internal_dyna_detect_global_setting();
}
inline ::DynaDnnDetect::DynaDetectGlobalSetting* DynaDnnDetectTaskConfig::release_dyna_detect_global_setting() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DynaDnnDetectTaskConfig.dyna_detect_global_setting)
  
  ::DynaDnnDetect::DynaDetectGlobalSetting* temp = dyna_detect_global_setting_;
  dyna_detect_global_setting_ = nullptr;
  return temp;
}
inline ::DynaDnnDetect::DynaDetectGlobalSetting* DynaDnnDetectTaskConfig::_internal_mutable_dyna_detect_global_setting() {
  
  if (dyna_detect_global_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::DynaDnnDetect::DynaDetectGlobalSetting>(GetArenaNoVirtual());
    dyna_detect_global_setting_ = p;
  }
  return dyna_detect_global_setting_;
}
inline ::DynaDnnDetect::DynaDetectGlobalSetting* DynaDnnDetectTaskConfig::mutable_dyna_detect_global_setting() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DynaDnnDetectTaskConfig.dyna_detect_global_setting)
  return _internal_mutable_dyna_detect_global_setting();
}
inline void DynaDnnDetectTaskConfig::set_allocated_dyna_detect_global_setting(::DynaDnnDetect::DynaDetectGlobalSetting* dyna_detect_global_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dyna_detect_global_setting_;
  }
  if (dyna_detect_global_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dyna_detect_global_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dyna_detect_global_setting, submessage_arena);
    }
    
  } else {
    
  }
  dyna_detect_global_setting_ = dyna_detect_global_setting;
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DynaDnnDetectTaskConfig.dyna_detect_global_setting)
}

// .DavStreamletSetting.InputStreamletSetting input_setting = 10;
inline bool DynaDnnDetectTaskConfig::_internal_has_input_setting() const {
  return this != internal_default_instance() && input_setting_ != nullptr;
}
inline bool DynaDnnDetectTaskConfig::has_input_setting() const {
  return _internal_has_input_setting();
}
inline const ::DavStreamletSetting::InputStreamletSetting& DynaDnnDetectTaskConfig::_internal_input_setting() const {
  const ::DavStreamletSetting::InputStreamletSetting* p = input_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DavStreamletSetting::InputStreamletSetting*>(
      &::DavStreamletSetting::_InputStreamletSetting_default_instance_);
}
inline const ::DavStreamletSetting::InputStreamletSetting& DynaDnnDetectTaskConfig::input_setting() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDnnDetectTaskConfig.input_setting)
  return _internal_input_setting();
}
inline ::DavStreamletSetting::InputStreamletSetting* DynaDnnDetectTaskConfig::release_input_setting() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DynaDnnDetectTaskConfig.input_setting)
  
  ::DavStreamletSetting::InputStreamletSetting* temp = input_setting_;
  input_setting_ = nullptr;
  return temp;
}
inline ::DavStreamletSetting::InputStreamletSetting* DynaDnnDetectTaskConfig::_internal_mutable_input_setting() {
  
  if (input_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::DavStreamletSetting::InputStreamletSetting>(GetArenaNoVirtual());
    input_setting_ = p;
  }
  return input_setting_;
}
inline ::DavStreamletSetting::InputStreamletSetting* DynaDnnDetectTaskConfig::mutable_input_setting() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DynaDnnDetectTaskConfig.input_setting)
  return _internal_mutable_input_setting();
}
inline void DynaDnnDetectTaskConfig::set_allocated_input_setting(::DavStreamletSetting::InputStreamletSetting* input_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_setting_);
  }
  if (input_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_setting, submessage_arena);
    }
    
  } else {
    
  }
  input_setting_ = input_setting;
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DynaDnnDetectTaskConfig.input_setting)
}

// .DavStreamletSetting.OutputStreamletSetting output_setting = 11;
inline bool DynaDnnDetectTaskConfig::_internal_has_output_setting() const {
  return this != internal_default_instance() && output_setting_ != nullptr;
}
inline bool DynaDnnDetectTaskConfig::has_output_setting() const {
  return _internal_has_output_setting();
}
inline const ::DavStreamletSetting::OutputStreamletSetting& DynaDnnDetectTaskConfig::_internal_output_setting() const {
  const ::DavStreamletSetting::OutputStreamletSetting* p = output_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DavStreamletSetting::OutputStreamletSetting*>(
      &::DavStreamletSetting::_OutputStreamletSetting_default_instance_);
}
inline const ::DavStreamletSetting::OutputStreamletSetting& DynaDnnDetectTaskConfig::output_setting() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDnnDetectTaskConfig.output_setting)
  return _internal_output_setting();
}
inline ::DavStreamletSetting::OutputStreamletSetting* DynaDnnDetectTaskConfig::release_output_setting() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DynaDnnDetectTaskConfig.output_setting)
  
  ::DavStreamletSetting::OutputStreamletSetting* temp = output_setting_;
  output_setting_ = nullptr;
  return temp;
}
inline ::DavStreamletSetting::OutputStreamletSetting* DynaDnnDetectTaskConfig::_internal_mutable_output_setting() {
  
  if (output_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::DavStreamletSetting::OutputStreamletSetting>(GetArenaNoVirtual());
    output_setting_ = p;
  }
  return output_setting_;
}
inline ::DavStreamletSetting::OutputStreamletSetting* DynaDnnDetectTaskConfig::mutable_output_setting() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DynaDnnDetectTaskConfig.output_setting)
  return _internal_mutable_output_setting();
}
inline void DynaDnnDetectTaskConfig::set_allocated_output_setting(::DavStreamletSetting::OutputStreamletSetting* output_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(output_setting_);
  }
  if (output_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      output_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, output_setting, submessage_arena);
    }
    
  } else {
    
  }
  output_setting_ = output_setting;
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DynaDnnDetectTaskConfig.output_setting)
}

// map<string, .DynaDnnDetect.DnnDetectSetting> dnn_detector_settings = 12;
inline int DynaDnnDetectTaskConfig::_internal_dnn_detector_settings_size() const {
  return dnn_detector_settings_.size();
}
inline int DynaDnnDetectTaskConfig::dnn_detector_settings_size() const {
  return _internal_dnn_detector_settings_size();
}
inline void DynaDnnDetectTaskConfig::clear_dnn_detector_settings() {
  dnn_detector_settings_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >&
DynaDnnDetectTaskConfig::_internal_dnn_detector_settings() const {
  return dnn_detector_settings_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >&
DynaDnnDetectTaskConfig::dnn_detector_settings() const {
  // @@protoc_insertion_point(field_map:DynaDnnDetect.DynaDnnDetectTaskConfig.dnn_detector_settings)
  return _internal_dnn_detector_settings();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >*
DynaDnnDetectTaskConfig::_internal_mutable_dnn_detector_settings() {
  return dnn_detector_settings_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DynaDnnDetect::DnnDetectSetting >*
DynaDnnDetectTaskConfig::mutable_dnn_detector_settings() {
  // @@protoc_insertion_point(field_mutable_map:DynaDnnDetect.DynaDnnDetectTaskConfig.dnn_detector_settings)
  return _internal_mutable_dnn_detector_settings();
}

// -------------------------------------------------------------------

// DynaDetectGlobalSetting

// int32 max_detectors = 1;
inline void DynaDetectGlobalSetting::clear_max_detectors() {
  max_detectors_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DynaDetectGlobalSetting::_internal_max_detectors() const {
  return max_detectors_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DynaDetectGlobalSetting::max_detectors() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDetectGlobalSetting.max_detectors)
  return _internal_max_detectors();
}
inline void DynaDetectGlobalSetting::_internal_set_max_detectors(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_detectors_ = value;
}
inline void DynaDetectGlobalSetting::set_max_detectors(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_detectors(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DynaDetectGlobalSetting.max_detectors)
}

// int32 max_buf_num_of_detect_streamlet = 2;
inline void DynaDetectGlobalSetting::clear_max_buf_num_of_detect_streamlet() {
  max_buf_num_of_detect_streamlet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DynaDetectGlobalSetting::_internal_max_buf_num_of_detect_streamlet() const {
  return max_buf_num_of_detect_streamlet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DynaDetectGlobalSetting::max_buf_num_of_detect_streamlet() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDetectGlobalSetting.max_buf_num_of_detect_streamlet)
  return _internal_max_buf_num_of_detect_streamlet();
}
inline void DynaDetectGlobalSetting::_internal_set_max_buf_num_of_detect_streamlet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_buf_num_of_detect_streamlet_ = value;
}
inline void DynaDetectGlobalSetting::set_max_buf_num_of_detect_streamlet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_buf_num_of_detect_streamlet(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DynaDetectGlobalSetting.max_buf_num_of_detect_streamlet)
}

// string input_url = 3;
inline void DynaDetectGlobalSetting::clear_input_url() {
  input_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DynaDetectGlobalSetting::input_url() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
  return _internal_input_url();
}
inline void DynaDetectGlobalSetting::set_input_url(const std::string& value) {
  _internal_set_input_url(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
}
inline std::string* DynaDetectGlobalSetting::mutable_input_url() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
  return _internal_mutable_input_url();
}
inline const std::string& DynaDetectGlobalSetting::_internal_input_url() const {
  return input_url_.GetNoArena();
}
inline void DynaDetectGlobalSetting::_internal_set_input_url(const std::string& value) {
  
  input_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DynaDetectGlobalSetting::set_input_url(std::string&& value) {
  
  input_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
}
inline void DynaDetectGlobalSetting::set_input_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
}
inline void DynaDetectGlobalSetting::set_input_url(const char* value, size_t size) {
  
  input_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
}
inline std::string* DynaDetectGlobalSetting::_internal_mutable_input_url() {
  
  return input_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DynaDetectGlobalSetting::release_input_url() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
  
  return input_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DynaDetectGlobalSetting::set_allocated_input_url(std::string* input_url) {
  if (input_url != nullptr) {
    
  } else {
    
  }
  input_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input_url);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DynaDetectGlobalSetting.input_url)
}

// string output_url = 4;
inline void DynaDetectGlobalSetting::clear_output_url() {
  output_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DynaDetectGlobalSetting::output_url() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
  return _internal_output_url();
}
inline void DynaDetectGlobalSetting::set_output_url(const std::string& value) {
  _internal_set_output_url(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
}
inline std::string* DynaDetectGlobalSetting::mutable_output_url() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
  return _internal_mutable_output_url();
}
inline const std::string& DynaDetectGlobalSetting::_internal_output_url() const {
  return output_url_.GetNoArena();
}
inline void DynaDetectGlobalSetting::_internal_set_output_url(const std::string& value) {
  
  output_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DynaDetectGlobalSetting::set_output_url(std::string&& value) {
  
  output_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
}
inline void DynaDetectGlobalSetting::set_output_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
}
inline void DynaDetectGlobalSetting::set_output_url(const char* value, size_t size) {
  
  output_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
}
inline std::string* DynaDetectGlobalSetting::_internal_mutable_output_url() {
  
  return output_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DynaDetectGlobalSetting::release_output_url() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
  
  return output_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DynaDetectGlobalSetting::set_allocated_output_url(std::string* output_url) {
  if (output_url != nullptr) {
    
  } else {
    
  }
  output_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), output_url);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DynaDetectGlobalSetting.output_url)
}

// -------------------------------------------------------------------

// DnnDetectSetting

// string detector_type = 1;
inline void DnnDetectSetting::clear_detector_type() {
  detector_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DnnDetectSetting::detector_type() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.detector_type)
  return _internal_detector_type();
}
inline void DnnDetectSetting::set_detector_type(const std::string& value) {
  _internal_set_detector_type(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.detector_type)
}
inline std::string* DnnDetectSetting::mutable_detector_type() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DnnDetectSetting.detector_type)
  return _internal_mutable_detector_type();
}
inline const std::string& DnnDetectSetting::_internal_detector_type() const {
  return detector_type_.GetNoArena();
}
inline void DnnDetectSetting::_internal_set_detector_type(const std::string& value) {
  
  detector_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DnnDetectSetting::set_detector_type(std::string&& value) {
  
  detector_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DnnDetectSetting.detector_type)
}
inline void DnnDetectSetting::set_detector_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  detector_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DnnDetectSetting.detector_type)
}
inline void DnnDetectSetting::set_detector_type(const char* value, size_t size) {
  
  detector_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DnnDetectSetting.detector_type)
}
inline std::string* DnnDetectSetting::_internal_mutable_detector_type() {
  
  return detector_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DnnDetectSetting::release_detector_type() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DnnDetectSetting.detector_type)
  
  return detector_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DnnDetectSetting::set_allocated_detector_type(std::string* detector_type) {
  if (detector_type != nullptr) {
    
  } else {
    
  }
  detector_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), detector_type);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DnnDetectSetting.detector_type)
}

// string detector_framework_tag = 2;
inline void DnnDetectSetting::clear_detector_framework_tag() {
  detector_framework_tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DnnDetectSetting::detector_framework_tag() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
  return _internal_detector_framework_tag();
}
inline void DnnDetectSetting::set_detector_framework_tag(const std::string& value) {
  _internal_set_detector_framework_tag(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
}
inline std::string* DnnDetectSetting::mutable_detector_framework_tag() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
  return _internal_mutable_detector_framework_tag();
}
inline const std::string& DnnDetectSetting::_internal_detector_framework_tag() const {
  return detector_framework_tag_.GetNoArena();
}
inline void DnnDetectSetting::_internal_set_detector_framework_tag(const std::string& value) {
  
  detector_framework_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DnnDetectSetting::set_detector_framework_tag(std::string&& value) {
  
  detector_framework_tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
}
inline void DnnDetectSetting::set_detector_framework_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  detector_framework_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
}
inline void DnnDetectSetting::set_detector_framework_tag(const char* value, size_t size) {
  
  detector_framework_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
}
inline std::string* DnnDetectSetting::_internal_mutable_detector_framework_tag() {
  
  return detector_framework_tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DnnDetectSetting::release_detector_framework_tag() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
  
  return detector_framework_tag_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DnnDetectSetting::set_allocated_detector_framework_tag(std::string* detector_framework_tag) {
  if (detector_framework_tag != nullptr) {
    
  } else {
    
  }
  detector_framework_tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), detector_framework_tag);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DnnDetectSetting.detector_framework_tag)
}

// string model_path = 3;
inline void DnnDetectSetting::clear_model_path() {
  model_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DnnDetectSetting::model_path() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.model_path)
  return _internal_model_path();
}
inline void DnnDetectSetting::set_model_path(const std::string& value) {
  _internal_set_model_path(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.model_path)
}
inline std::string* DnnDetectSetting::mutable_model_path() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DnnDetectSetting.model_path)
  return _internal_mutable_model_path();
}
inline const std::string& DnnDetectSetting::_internal_model_path() const {
  return model_path_.GetNoArena();
}
inline void DnnDetectSetting::_internal_set_model_path(const std::string& value) {
  
  model_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DnnDetectSetting::set_model_path(std::string&& value) {
  
  model_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DnnDetectSetting.model_path)
}
inline void DnnDetectSetting::set_model_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  model_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DnnDetectSetting.model_path)
}
inline void DnnDetectSetting::set_model_path(const char* value, size_t size) {
  
  model_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DnnDetectSetting.model_path)
}
inline std::string* DnnDetectSetting::_internal_mutable_model_path() {
  
  return model_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DnnDetectSetting::release_model_path() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DnnDetectSetting.model_path)
  
  return model_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DnnDetectSetting::set_allocated_model_path(std::string* model_path) {
  if (model_path != nullptr) {
    
  } else {
    
  }
  model_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_path);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DnnDetectSetting.model_path)
}

// string config_path = 4;
inline void DnnDetectSetting::clear_config_path() {
  config_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DnnDetectSetting::config_path() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.config_path)
  return _internal_config_path();
}
inline void DnnDetectSetting::set_config_path(const std::string& value) {
  _internal_set_config_path(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.config_path)
}
inline std::string* DnnDetectSetting::mutable_config_path() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DnnDetectSetting.config_path)
  return _internal_mutable_config_path();
}
inline const std::string& DnnDetectSetting::_internal_config_path() const {
  return config_path_.GetNoArena();
}
inline void DnnDetectSetting::_internal_set_config_path(const std::string& value) {
  
  config_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DnnDetectSetting::set_config_path(std::string&& value) {
  
  config_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DnnDetectSetting.config_path)
}
inline void DnnDetectSetting::set_config_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  config_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DnnDetectSetting.config_path)
}
inline void DnnDetectSetting::set_config_path(const char* value, size_t size) {
  
  config_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DnnDetectSetting.config_path)
}
inline std::string* DnnDetectSetting::_internal_mutable_config_path() {
  
  return config_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DnnDetectSetting::release_config_path() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DnnDetectSetting.config_path)
  
  return config_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DnnDetectSetting::set_allocated_config_path(std::string* config_path) {
  if (config_path != nullptr) {
    
  } else {
    
  }
  config_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), config_path);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DnnDetectSetting.config_path)
}

// string classname_path = 5;
inline void DnnDetectSetting::clear_classname_path() {
  classname_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DnnDetectSetting::classname_path() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.classname_path)
  return _internal_classname_path();
}
inline void DnnDetectSetting::set_classname_path(const std::string& value) {
  _internal_set_classname_path(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.classname_path)
}
inline std::string* DnnDetectSetting::mutable_classname_path() {
  // @@protoc_insertion_point(field_mutable:DynaDnnDetect.DnnDetectSetting.classname_path)
  return _internal_mutable_classname_path();
}
inline const std::string& DnnDetectSetting::_internal_classname_path() const {
  return classname_path_.GetNoArena();
}
inline void DnnDetectSetting::_internal_set_classname_path(const std::string& value) {
  
  classname_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DnnDetectSetting::set_classname_path(std::string&& value) {
  
  classname_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynaDnnDetect.DnnDetectSetting.classname_path)
}
inline void DnnDetectSetting::set_classname_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  classname_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynaDnnDetect.DnnDetectSetting.classname_path)
}
inline void DnnDetectSetting::set_classname_path(const char* value, size_t size) {
  
  classname_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynaDnnDetect.DnnDetectSetting.classname_path)
}
inline std::string* DnnDetectSetting::_internal_mutable_classname_path() {
  
  return classname_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DnnDetectSetting::release_classname_path() {
  // @@protoc_insertion_point(field_release:DynaDnnDetect.DnnDetectSetting.classname_path)
  
  return classname_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DnnDetectSetting::set_allocated_classname_path(std::string* classname_path) {
  if (classname_path != nullptr) {
    
  } else {
    
  }
  classname_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), classname_path);
  // @@protoc_insertion_point(field_set_allocated:DynaDnnDetect.DnnDetectSetting.classname_path)
}

// int32 backend_id = 6;
inline void DnnDetectSetting::clear_backend_id() {
  backend_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::_internal_backend_id() const {
  return backend_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::backend_id() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.backend_id)
  return _internal_backend_id();
}
inline void DnnDetectSetting::_internal_set_backend_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  backend_id_ = value;
}
inline void DnnDetectSetting::set_backend_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_backend_id(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.backend_id)
}

// int32 target_id = 7;
inline void DnnDetectSetting::clear_target_id() {
  target_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::_internal_target_id() const {
  return target_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::target_id() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.target_id)
  return _internal_target_id();
}
inline void DnnDetectSetting::_internal_set_target_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  target_id_ = value;
}
inline void DnnDetectSetting::set_target_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.target_id)
}

// float scale_factor = 11;
inline void DnnDetectSetting::clear_scale_factor() {
  scale_factor_ = 0;
}
inline float DnnDetectSetting::_internal_scale_factor() const {
  return scale_factor_;
}
inline float DnnDetectSetting::scale_factor() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.scale_factor)
  return _internal_scale_factor();
}
inline void DnnDetectSetting::_internal_set_scale_factor(float value) {
  
  scale_factor_ = value;
}
inline void DnnDetectSetting::set_scale_factor(float value) {
  _internal_set_scale_factor(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.scale_factor)
}

// repeated float means = 12;
inline int DnnDetectSetting::_internal_means_size() const {
  return means_.size();
}
inline int DnnDetectSetting::means_size() const {
  return _internal_means_size();
}
inline void DnnDetectSetting::clear_means() {
  means_.Clear();
}
inline float DnnDetectSetting::_internal_means(int index) const {
  return means_.Get(index);
}
inline float DnnDetectSetting::means(int index) const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.means)
  return _internal_means(index);
}
inline void DnnDetectSetting::set_means(int index, float value) {
  means_.Set(index, value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.means)
}
inline void DnnDetectSetting::_internal_add_means(float value) {
  means_.Add(value);
}
inline void DnnDetectSetting::add_means(float value) {
  _internal_add_means(value);
  // @@protoc_insertion_point(field_add:DynaDnnDetect.DnnDetectSetting.means)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
DnnDetectSetting::_internal_means() const {
  return means_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
DnnDetectSetting::means() const {
  // @@protoc_insertion_point(field_list:DynaDnnDetect.DnnDetectSetting.means)
  return _internal_means();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
DnnDetectSetting::_internal_mutable_means() {
  return &means_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
DnnDetectSetting::mutable_means() {
  // @@protoc_insertion_point(field_mutable_list:DynaDnnDetect.DnnDetectSetting.means)
  return _internal_mutable_means();
}

// bool swap_rb = 13;
inline void DnnDetectSetting::clear_swap_rb() {
  swap_rb_ = false;
}
inline bool DnnDetectSetting::_internal_swap_rb() const {
  return swap_rb_;
}
inline bool DnnDetectSetting::swap_rb() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.swap_rb)
  return _internal_swap_rb();
}
inline void DnnDetectSetting::_internal_set_swap_rb(bool value) {
  
  swap_rb_ = value;
}
inline void DnnDetectSetting::set_swap_rb(bool value) {
  _internal_set_swap_rb(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.swap_rb)
}

// int32 width = 14;
inline void DnnDetectSetting::clear_width() {
  width_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::width() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.width)
  return _internal_width();
}
inline void DnnDetectSetting::_internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  width_ = value;
}
inline void DnnDetectSetting::set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.width)
}

// int32 height = 15;
inline void DnnDetectSetting::clear_height() {
  height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::height() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.height)
  return _internal_height();
}
inline void DnnDetectSetting::_internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  height_ = value;
}
inline void DnnDetectSetting::set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.height)
}

// float conf_threshold = 16;
inline void DnnDetectSetting::clear_conf_threshold() {
  conf_threshold_ = 0;
}
inline float DnnDetectSetting::_internal_conf_threshold() const {
  return conf_threshold_;
}
inline float DnnDetectSetting::conf_threshold() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.conf_threshold)
  return _internal_conf_threshold();
}
inline void DnnDetectSetting::_internal_set_conf_threshold(float value) {
  
  conf_threshold_ = value;
}
inline void DnnDetectSetting::set_conf_threshold(float value) {
  _internal_set_conf_threshold(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.conf_threshold)
}

// int32 detect_interval = 17;
inline void DnnDetectSetting::clear_detect_interval() {
  detect_interval_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::_internal_detect_interval() const {
  return detect_interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DnnDetectSetting::detect_interval() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.detect_interval)
  return _internal_detect_interval();
}
inline void DnnDetectSetting::_internal_set_detect_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  detect_interval_ = value;
}
inline void DnnDetectSetting::set_detect_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_detect_interval(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.detect_interval)
}

// bool enable = 20;
inline void DnnDetectSetting::clear_enable() {
  enable_ = false;
}
inline bool DnnDetectSetting::_internal_enable() const {
  return enable_;
}
inline bool DnnDetectSetting::enable() const {
  // @@protoc_insertion_point(field_get:DynaDnnDetect.DnnDetectSetting.enable)
  return _internal_enable();
}
inline void DnnDetectSetting::_internal_set_enable(bool value) {
  
  enable_ = value;
}
inline void DnnDetectSetting::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:DynaDnnDetect.DnnDetectSetting.enable)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace DynaDnnDetect

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dynaDnnDetect_2eproto
