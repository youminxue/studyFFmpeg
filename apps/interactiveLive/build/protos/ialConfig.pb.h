// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ialConfig.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ialConfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ialConfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "davStreamletSetting.pb.h"
#include "appGlobalSetting.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ialConfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ialConfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ialConfig_2eproto;
namespace IalConfig {
class IalGlobalSetting;
class IalGlobalSettingDefaultTypeInternal;
extern IalGlobalSettingDefaultTypeInternal _IalGlobalSetting_default_instance_;
class IalTaskConfig;
class IalTaskConfigDefaultTypeInternal;
extern IalTaskConfigDefaultTypeInternal _IalTaskConfig_default_instance_;
class IalTaskConfig_OutputSettingsEntry_DoNotUse;
class IalTaskConfig_OutputSettingsEntry_DoNotUseDefaultTypeInternal;
extern IalTaskConfig_OutputSettingsEntry_DoNotUseDefaultTypeInternal _IalTaskConfig_OutputSettingsEntry_DoNotUse_default_instance_;
}  // namespace IalConfig
PROTOBUF_NAMESPACE_OPEN
template<> ::IalConfig::IalGlobalSetting* Arena::CreateMaybeMessage<::IalConfig::IalGlobalSetting>(Arena*);
template<> ::IalConfig::IalTaskConfig* Arena::CreateMaybeMessage<::IalConfig::IalTaskConfig>(Arena*);
template<> ::IalConfig::IalTaskConfig_OutputSettingsEntry_DoNotUse* Arena::CreateMaybeMessage<::IalConfig::IalTaskConfig_OutputSettingsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace IalConfig {

// ===================================================================

class IalGlobalSetting :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IalConfig.IalGlobalSetting) */ {
 public:
  IalGlobalSetting();
  virtual ~IalGlobalSetting();

  IalGlobalSetting(const IalGlobalSetting& from);
  IalGlobalSetting(IalGlobalSetting&& from) noexcept
    : IalGlobalSetting() {
    *this = ::std::move(from);
  }

  inline IalGlobalSetting& operator=(const IalGlobalSetting& from) {
    CopyFrom(from);
    return *this;
  }
  inline IalGlobalSetting& operator=(IalGlobalSetting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IalGlobalSetting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IalGlobalSetting* internal_default_instance() {
    return reinterpret_cast<const IalGlobalSetting*>(
               &_IalGlobalSetting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IalGlobalSetting& a, IalGlobalSetting& b) {
    a.Swap(&b);
  }
  inline void Swap(IalGlobalSetting* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IalGlobalSetting* New() const final {
    return CreateMaybeMessage<IalGlobalSetting>(nullptr);
  }

  IalGlobalSetting* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IalGlobalSetting>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IalGlobalSetting& from);
  void MergeFrom(const IalGlobalSetting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IalGlobalSetting* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IalConfig.IalGlobalSetting";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ialConfig_2eproto);
    return ::descriptor_table_ialConfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxParticipantsFieldNumber = 10,
  };
  // int32 max_participants = 10;
  void clear_max_participants();
  ::PROTOBUF_NAMESPACE_ID::int32 max_participants() const;
  void set_max_participants(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_participants() const;
  void _internal_set_max_participants(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IalConfig.IalGlobalSetting)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_participants_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ialConfig_2eproto;
};
// -------------------------------------------------------------------

class IalTaskConfig_OutputSettingsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<IalTaskConfig_OutputSettingsEntry_DoNotUse, 
    std::string, ::DavStreamletSetting::OutputStreamletSetting,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<IalTaskConfig_OutputSettingsEntry_DoNotUse, 
    std::string, ::DavStreamletSetting::OutputStreamletSetting,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  IalTaskConfig_OutputSettingsEntry_DoNotUse();
  IalTaskConfig_OutputSettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const IalTaskConfig_OutputSettingsEntry_DoNotUse& other);
  static const IalTaskConfig_OutputSettingsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const IalTaskConfig_OutputSettingsEntry_DoNotUse*>(&_IalTaskConfig_OutputSettingsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "IalConfig.IalTaskConfig.OutputSettingsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ialConfig_2eproto);
    return ::descriptor_table_ialConfig_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class IalTaskConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IalConfig.IalTaskConfig) */ {
 public:
  IalTaskConfig();
  virtual ~IalTaskConfig();

  IalTaskConfig(const IalTaskConfig& from);
  IalTaskConfig(IalTaskConfig&& from) noexcept
    : IalTaskConfig() {
    *this = ::std::move(from);
  }

  inline IalTaskConfig& operator=(const IalTaskConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline IalTaskConfig& operator=(IalTaskConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IalTaskConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IalTaskConfig* internal_default_instance() {
    return reinterpret_cast<const IalTaskConfig*>(
               &_IalTaskConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IalTaskConfig& a, IalTaskConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(IalTaskConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IalTaskConfig* New() const final {
    return CreateMaybeMessage<IalTaskConfig>(nullptr);
  }

  IalTaskConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IalTaskConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IalTaskConfig& from);
  void MergeFrom(const IalTaskConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IalTaskConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IalConfig.IalTaskConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ialConfig_2eproto);
    return ::descriptor_table_ialConfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOutputSettingsFieldNumber = 12,
    kAppGlobalSettingFieldNumber = 1,
    kIalGlobalSettingFieldNumber = 2,
    kInputSettingFieldNumber = 10,
    kMixSettingFieldNumber = 11,
  };
  // map<string, .DavStreamletSetting.OutputStreamletSetting> output_settings = 12;
  int output_settings_size() const;
  private:
  int _internal_output_settings_size() const;
  public:
  void clear_output_settings();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >&
      _internal_output_settings() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >*
      _internal_mutable_output_settings();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >&
      output_settings() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >*
      mutable_output_settings();

  // .AppGlobalSetting.GlobalSetting app_global_setting = 1;
  bool has_app_global_setting() const;
  private:
  bool _internal_has_app_global_setting() const;
  public:
  void clear_app_global_setting();
  const ::AppGlobalSetting::GlobalSetting& app_global_setting() const;
  ::AppGlobalSetting::GlobalSetting* release_app_global_setting();
  ::AppGlobalSetting::GlobalSetting* mutable_app_global_setting();
  void set_allocated_app_global_setting(::AppGlobalSetting::GlobalSetting* app_global_setting);
  private:
  const ::AppGlobalSetting::GlobalSetting& _internal_app_global_setting() const;
  ::AppGlobalSetting::GlobalSetting* _internal_mutable_app_global_setting();
  public:

  // .IalConfig.IalGlobalSetting ial_global_setting = 2;
  bool has_ial_global_setting() const;
  private:
  bool _internal_has_ial_global_setting() const;
  public:
  void clear_ial_global_setting();
  const ::IalConfig::IalGlobalSetting& ial_global_setting() const;
  ::IalConfig::IalGlobalSetting* release_ial_global_setting();
  ::IalConfig::IalGlobalSetting* mutable_ial_global_setting();
  void set_allocated_ial_global_setting(::IalConfig::IalGlobalSetting* ial_global_setting);
  private:
  const ::IalConfig::IalGlobalSetting& _internal_ial_global_setting() const;
  ::IalConfig::IalGlobalSetting* _internal_mutable_ial_global_setting();
  public:

  // .DavStreamletSetting.InputStreamletSetting input_setting = 10;
  bool has_input_setting() const;
  private:
  bool _internal_has_input_setting() const;
  public:
  void clear_input_setting();
  const ::DavStreamletSetting::InputStreamletSetting& input_setting() const;
  ::DavStreamletSetting::InputStreamletSetting* release_input_setting();
  ::DavStreamletSetting::InputStreamletSetting* mutable_input_setting();
  void set_allocated_input_setting(::DavStreamletSetting::InputStreamletSetting* input_setting);
  private:
  const ::DavStreamletSetting::InputStreamletSetting& _internal_input_setting() const;
  ::DavStreamletSetting::InputStreamletSetting* _internal_mutable_input_setting();
  public:

  // .DavStreamletSetting.MixStreamletSetting mix_setting = 11;
  bool has_mix_setting() const;
  private:
  bool _internal_has_mix_setting() const;
  public:
  void clear_mix_setting();
  const ::DavStreamletSetting::MixStreamletSetting& mix_setting() const;
  ::DavStreamletSetting::MixStreamletSetting* release_mix_setting();
  ::DavStreamletSetting::MixStreamletSetting* mutable_mix_setting();
  void set_allocated_mix_setting(::DavStreamletSetting::MixStreamletSetting* mix_setting);
  private:
  const ::DavStreamletSetting::MixStreamletSetting& _internal_mix_setting() const;
  ::DavStreamletSetting::MixStreamletSetting* _internal_mutable_mix_setting();
  public:

  // @@protoc_insertion_point(class_scope:IalConfig.IalTaskConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      IalTaskConfig_OutputSettingsEntry_DoNotUse,
      std::string, ::DavStreamletSetting::OutputStreamletSetting,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > output_settings_;
  ::AppGlobalSetting::GlobalSetting* app_global_setting_;
  ::IalConfig::IalGlobalSetting* ial_global_setting_;
  ::DavStreamletSetting::InputStreamletSetting* input_setting_;
  ::DavStreamletSetting::MixStreamletSetting* mix_setting_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ialConfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IalGlobalSetting

// int32 max_participants = 10;
inline void IalGlobalSetting::clear_max_participants() {
  max_participants_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IalGlobalSetting::_internal_max_participants() const {
  return max_participants_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IalGlobalSetting::max_participants() const {
  // @@protoc_insertion_point(field_get:IalConfig.IalGlobalSetting.max_participants)
  return _internal_max_participants();
}
inline void IalGlobalSetting::_internal_set_max_participants(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_participants_ = value;
}
inline void IalGlobalSetting::set_max_participants(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_participants(value);
  // @@protoc_insertion_point(field_set:IalConfig.IalGlobalSetting.max_participants)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IalTaskConfig

// .AppGlobalSetting.GlobalSetting app_global_setting = 1;
inline bool IalTaskConfig::_internal_has_app_global_setting() const {
  return this != internal_default_instance() && app_global_setting_ != nullptr;
}
inline bool IalTaskConfig::has_app_global_setting() const {
  return _internal_has_app_global_setting();
}
inline const ::AppGlobalSetting::GlobalSetting& IalTaskConfig::_internal_app_global_setting() const {
  const ::AppGlobalSetting::GlobalSetting* p = app_global_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::AppGlobalSetting::GlobalSetting*>(
      &::AppGlobalSetting::_GlobalSetting_default_instance_);
}
inline const ::AppGlobalSetting::GlobalSetting& IalTaskConfig::app_global_setting() const {
  // @@protoc_insertion_point(field_get:IalConfig.IalTaskConfig.app_global_setting)
  return _internal_app_global_setting();
}
inline ::AppGlobalSetting::GlobalSetting* IalTaskConfig::release_app_global_setting() {
  // @@protoc_insertion_point(field_release:IalConfig.IalTaskConfig.app_global_setting)
  
  ::AppGlobalSetting::GlobalSetting* temp = app_global_setting_;
  app_global_setting_ = nullptr;
  return temp;
}
inline ::AppGlobalSetting::GlobalSetting* IalTaskConfig::_internal_mutable_app_global_setting() {
  
  if (app_global_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::AppGlobalSetting::GlobalSetting>(GetArenaNoVirtual());
    app_global_setting_ = p;
  }
  return app_global_setting_;
}
inline ::AppGlobalSetting::GlobalSetting* IalTaskConfig::mutable_app_global_setting() {
  // @@protoc_insertion_point(field_mutable:IalConfig.IalTaskConfig.app_global_setting)
  return _internal_mutable_app_global_setting();
}
inline void IalTaskConfig::set_allocated_app_global_setting(::AppGlobalSetting::GlobalSetting* app_global_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(app_global_setting_);
  }
  if (app_global_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      app_global_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, app_global_setting, submessage_arena);
    }
    
  } else {
    
  }
  app_global_setting_ = app_global_setting;
  // @@protoc_insertion_point(field_set_allocated:IalConfig.IalTaskConfig.app_global_setting)
}

// .IalConfig.IalGlobalSetting ial_global_setting = 2;
inline bool IalTaskConfig::_internal_has_ial_global_setting() const {
  return this != internal_default_instance() && ial_global_setting_ != nullptr;
}
inline bool IalTaskConfig::has_ial_global_setting() const {
  return _internal_has_ial_global_setting();
}
inline void IalTaskConfig::clear_ial_global_setting() {
  if (GetArenaNoVirtual() == nullptr && ial_global_setting_ != nullptr) {
    delete ial_global_setting_;
  }
  ial_global_setting_ = nullptr;
}
inline const ::IalConfig::IalGlobalSetting& IalTaskConfig::_internal_ial_global_setting() const {
  const ::IalConfig::IalGlobalSetting* p = ial_global_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::IalConfig::IalGlobalSetting*>(
      &::IalConfig::_IalGlobalSetting_default_instance_);
}
inline const ::IalConfig::IalGlobalSetting& IalTaskConfig::ial_global_setting() const {
  // @@protoc_insertion_point(field_get:IalConfig.IalTaskConfig.ial_global_setting)
  return _internal_ial_global_setting();
}
inline ::IalConfig::IalGlobalSetting* IalTaskConfig::release_ial_global_setting() {
  // @@protoc_insertion_point(field_release:IalConfig.IalTaskConfig.ial_global_setting)
  
  ::IalConfig::IalGlobalSetting* temp = ial_global_setting_;
  ial_global_setting_ = nullptr;
  return temp;
}
inline ::IalConfig::IalGlobalSetting* IalTaskConfig::_internal_mutable_ial_global_setting() {
  
  if (ial_global_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::IalConfig::IalGlobalSetting>(GetArenaNoVirtual());
    ial_global_setting_ = p;
  }
  return ial_global_setting_;
}
inline ::IalConfig::IalGlobalSetting* IalTaskConfig::mutable_ial_global_setting() {
  // @@protoc_insertion_point(field_mutable:IalConfig.IalTaskConfig.ial_global_setting)
  return _internal_mutable_ial_global_setting();
}
inline void IalTaskConfig::set_allocated_ial_global_setting(::IalConfig::IalGlobalSetting* ial_global_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ial_global_setting_;
  }
  if (ial_global_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ial_global_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ial_global_setting, submessage_arena);
    }
    
  } else {
    
  }
  ial_global_setting_ = ial_global_setting;
  // @@protoc_insertion_point(field_set_allocated:IalConfig.IalTaskConfig.ial_global_setting)
}

// .DavStreamletSetting.InputStreamletSetting input_setting = 10;
inline bool IalTaskConfig::_internal_has_input_setting() const {
  return this != internal_default_instance() && input_setting_ != nullptr;
}
inline bool IalTaskConfig::has_input_setting() const {
  return _internal_has_input_setting();
}
inline const ::DavStreamletSetting::InputStreamletSetting& IalTaskConfig::_internal_input_setting() const {
  const ::DavStreamletSetting::InputStreamletSetting* p = input_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DavStreamletSetting::InputStreamletSetting*>(
      &::DavStreamletSetting::_InputStreamletSetting_default_instance_);
}
inline const ::DavStreamletSetting::InputStreamletSetting& IalTaskConfig::input_setting() const {
  // @@protoc_insertion_point(field_get:IalConfig.IalTaskConfig.input_setting)
  return _internal_input_setting();
}
inline ::DavStreamletSetting::InputStreamletSetting* IalTaskConfig::release_input_setting() {
  // @@protoc_insertion_point(field_release:IalConfig.IalTaskConfig.input_setting)
  
  ::DavStreamletSetting::InputStreamletSetting* temp = input_setting_;
  input_setting_ = nullptr;
  return temp;
}
inline ::DavStreamletSetting::InputStreamletSetting* IalTaskConfig::_internal_mutable_input_setting() {
  
  if (input_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::DavStreamletSetting::InputStreamletSetting>(GetArenaNoVirtual());
    input_setting_ = p;
  }
  return input_setting_;
}
inline ::DavStreamletSetting::InputStreamletSetting* IalTaskConfig::mutable_input_setting() {
  // @@protoc_insertion_point(field_mutable:IalConfig.IalTaskConfig.input_setting)
  return _internal_mutable_input_setting();
}
inline void IalTaskConfig::set_allocated_input_setting(::DavStreamletSetting::InputStreamletSetting* input_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_setting_);
  }
  if (input_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_setting, submessage_arena);
    }
    
  } else {
    
  }
  input_setting_ = input_setting;
  // @@protoc_insertion_point(field_set_allocated:IalConfig.IalTaskConfig.input_setting)
}

// .DavStreamletSetting.MixStreamletSetting mix_setting = 11;
inline bool IalTaskConfig::_internal_has_mix_setting() const {
  return this != internal_default_instance() && mix_setting_ != nullptr;
}
inline bool IalTaskConfig::has_mix_setting() const {
  return _internal_has_mix_setting();
}
inline const ::DavStreamletSetting::MixStreamletSetting& IalTaskConfig::_internal_mix_setting() const {
  const ::DavStreamletSetting::MixStreamletSetting* p = mix_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DavStreamletSetting::MixStreamletSetting*>(
      &::DavStreamletSetting::_MixStreamletSetting_default_instance_);
}
inline const ::DavStreamletSetting::MixStreamletSetting& IalTaskConfig::mix_setting() const {
  // @@protoc_insertion_point(field_get:IalConfig.IalTaskConfig.mix_setting)
  return _internal_mix_setting();
}
inline ::DavStreamletSetting::MixStreamletSetting* IalTaskConfig::release_mix_setting() {
  // @@protoc_insertion_point(field_release:IalConfig.IalTaskConfig.mix_setting)
  
  ::DavStreamletSetting::MixStreamletSetting* temp = mix_setting_;
  mix_setting_ = nullptr;
  return temp;
}
inline ::DavStreamletSetting::MixStreamletSetting* IalTaskConfig::_internal_mutable_mix_setting() {
  
  if (mix_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::DavStreamletSetting::MixStreamletSetting>(GetArenaNoVirtual());
    mix_setting_ = p;
  }
  return mix_setting_;
}
inline ::DavStreamletSetting::MixStreamletSetting* IalTaskConfig::mutable_mix_setting() {
  // @@protoc_insertion_point(field_mutable:IalConfig.IalTaskConfig.mix_setting)
  return _internal_mutable_mix_setting();
}
inline void IalTaskConfig::set_allocated_mix_setting(::DavStreamletSetting::MixStreamletSetting* mix_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mix_setting_);
  }
  if (mix_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mix_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mix_setting, submessage_arena);
    }
    
  } else {
    
  }
  mix_setting_ = mix_setting;
  // @@protoc_insertion_point(field_set_allocated:IalConfig.IalTaskConfig.mix_setting)
}

// map<string, .DavStreamletSetting.OutputStreamletSetting> output_settings = 12;
inline int IalTaskConfig::_internal_output_settings_size() const {
  return output_settings_.size();
}
inline int IalTaskConfig::output_settings_size() const {
  return _internal_output_settings_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >&
IalTaskConfig::_internal_output_settings() const {
  return output_settings_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >&
IalTaskConfig::output_settings() const {
  // @@protoc_insertion_point(field_map:IalConfig.IalTaskConfig.output_settings)
  return _internal_output_settings();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >*
IalTaskConfig::_internal_mutable_output_settings() {
  return output_settings_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DavStreamletSetting::OutputStreamletSetting >*
IalTaskConfig::mutable_output_settings() {
  // @@protoc_insertion_point(field_mutable_map:IalConfig.IalTaskConfig.output_settings)
  return _internal_mutable_output_settings();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IalConfig

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ialConfig_2eproto
