// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appGlobalSetting.proto

#include "appGlobalSetting.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace AppGlobalSetting {
class GlobalSettingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalSetting> _instance;
} _GlobalSetting_default_instance_;
class CommonResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommonResponse> _instance;
} _CommonResponse_default_instance_;
}  // namespace AppGlobalSetting
static void InitDefaultsscc_info_CommonResponse_appGlobalSetting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AppGlobalSetting::_CommonResponse_default_instance_;
    new (ptr) ::AppGlobalSetting::CommonResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AppGlobalSetting::CommonResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommonResponse_appGlobalSetting_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommonResponse_appGlobalSetting_2eproto}, {}};

static void InitDefaultsscc_info_GlobalSetting_appGlobalSetting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AppGlobalSetting::_GlobalSetting_default_instance_;
    new (ptr) ::AppGlobalSetting::GlobalSetting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AppGlobalSetting::GlobalSetting::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalSetting_appGlobalSetting_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GlobalSetting_appGlobalSetting_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_appGlobalSetting_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_appGlobalSetting_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_appGlobalSetting_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_appGlobalSetting_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, http_server_addr_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, http_server_port_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, input_max_buf_num_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, mix_max_buf_num_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, output_max_buf_num_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, glog_save_level_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, glog_save_path_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, ffmpeg_log_level_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::GlobalSetting, event_report_format_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::CommonResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::CommonResponse, code_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::CommonResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::AppGlobalSetting::CommonResponse, b_sync_resp_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AppGlobalSetting::GlobalSetting)},
  { 14, -1, sizeof(::AppGlobalSetting::CommonResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AppGlobalSetting::_GlobalSetting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AppGlobalSetting::_CommonResponse_default_instance_),
};

const char descriptor_table_protodef_appGlobalSetting_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026appGlobalSetting.proto\022\020AppGlobalSetti"
  "ng\"\373\001\n\rGlobalSetting\022\030\n\020http_server_addr"
  "\030\001 \001(\t\022\030\n\020http_server_port\030\002 \001(\005\022\031\n\021inpu"
  "t_max_buf_num\030\017 \001(\005\022\027\n\017mix_max_buf_num\030\020"
  " \001(\005\022\032\n\022output_max_buf_num\030\021 \001(\005\022\027\n\017glog"
  "_save_level\030\024 \001(\t\022\026\n\016glog_save_path\030\025 \001("
  "\t\022\030\n\020ffmpeg_log_level\030\026 \001(\t\022\033\n\023event_rep"
  "ort_format\030\027 \001(\t\"@\n\016CommonResponse\022\014\n\004co"
  "de\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\023\n\013b_sync_resp\030\003 \001"
  "(\010b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_appGlobalSetting_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_appGlobalSetting_2eproto_sccs[2] = {
  &scc_info_CommonResponse_appGlobalSetting_2eproto.base,
  &scc_info_GlobalSetting_appGlobalSetting_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_appGlobalSetting_2eproto_once;
static bool descriptor_table_appGlobalSetting_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_appGlobalSetting_2eproto = {
  &descriptor_table_appGlobalSetting_2eproto_initialized, descriptor_table_protodef_appGlobalSetting_2eproto, "appGlobalSetting.proto", 370,
  &descriptor_table_appGlobalSetting_2eproto_once, descriptor_table_appGlobalSetting_2eproto_sccs, descriptor_table_appGlobalSetting_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_appGlobalSetting_2eproto::offsets,
  file_level_metadata_appGlobalSetting_2eproto, 2, file_level_enum_descriptors_appGlobalSetting_2eproto, file_level_service_descriptors_appGlobalSetting_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_appGlobalSetting_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_appGlobalSetting_2eproto), true);
namespace AppGlobalSetting {

// ===================================================================

void GlobalSetting::InitAsDefaultInstance() {
}
class GlobalSetting::_Internal {
 public:
};

GlobalSetting::GlobalSetting()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppGlobalSetting.GlobalSetting)
}
GlobalSetting::GlobalSetting(const GlobalSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  http_server_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_http_server_addr().empty()) {
    http_server_addr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.http_server_addr_);
  }
  glog_save_level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_glog_save_level().empty()) {
    glog_save_level_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.glog_save_level_);
  }
  glog_save_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_glog_save_path().empty()) {
    glog_save_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.glog_save_path_);
  }
  ffmpeg_log_level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ffmpeg_log_level().empty()) {
    ffmpeg_log_level_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ffmpeg_log_level_);
  }
  event_report_format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event_report_format().empty()) {
    event_report_format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.event_report_format_);
  }
  ::memcpy(&http_server_port_, &from.http_server_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_max_buf_num_) -
    reinterpret_cast<char*>(&http_server_port_)) + sizeof(output_max_buf_num_));
  // @@protoc_insertion_point(copy_constructor:AppGlobalSetting.GlobalSetting)
}

void GlobalSetting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GlobalSetting_appGlobalSetting_2eproto.base);
  http_server_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  glog_save_level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  glog_save_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ffmpeg_log_level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_report_format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&http_server_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_max_buf_num_) -
      reinterpret_cast<char*>(&http_server_port_)) + sizeof(output_max_buf_num_));
}

GlobalSetting::~GlobalSetting() {
  // @@protoc_insertion_point(destructor:AppGlobalSetting.GlobalSetting)
  SharedDtor();
}

void GlobalSetting::SharedDtor() {
  http_server_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  glog_save_level_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  glog_save_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ffmpeg_log_level_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_report_format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GlobalSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalSetting& GlobalSetting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalSetting_appGlobalSetting_2eproto.base);
  return *internal_default_instance();
}


void GlobalSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:AppGlobalSetting.GlobalSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  http_server_addr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  glog_save_level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  glog_save_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ffmpeg_log_level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_report_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&http_server_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_max_buf_num_) -
      reinterpret_cast<char*>(&http_server_port_)) + sizeof(output_max_buf_num_));
  _internal_metadata_.Clear();
}

const char* GlobalSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string http_server_addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_http_server_addr(), ptr, ctx, "AppGlobalSetting.GlobalSetting.http_server_addr");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 http_server_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          http_server_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 input_max_buf_num = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          input_max_buf_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 mix_max_buf_num = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          mix_max_buf_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 output_max_buf_num = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          output_max_buf_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string glog_save_level = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_glog_save_level(), ptr, ctx, "AppGlobalSetting.GlobalSetting.glog_save_level");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string glog_save_path = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_glog_save_path(), ptr, ctx, "AppGlobalSetting.GlobalSetting.glog_save_path");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ffmpeg_log_level = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_ffmpeg_log_level(), ptr, ctx, "AppGlobalSetting.GlobalSetting.ffmpeg_log_level");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string event_report_format = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_event_report_format(), ptr, ctx, "AppGlobalSetting.GlobalSetting.event_report_format");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GlobalSetting::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppGlobalSetting.GlobalSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string http_server_addr = 1;
  if (this->http_server_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_http_server_addr().data(), static_cast<int>(this->_internal_http_server_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AppGlobalSetting.GlobalSetting.http_server_addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_http_server_addr(), target);
  }

  // int32 http_server_port = 2;
  if (this->http_server_port() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_http_server_port(), target);
  }

  // int32 input_max_buf_num = 15;
  if (this->input_max_buf_num() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_input_max_buf_num(), target);
  }

  // int32 mix_max_buf_num = 16;
  if (this->mix_max_buf_num() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_mix_max_buf_num(), target);
  }

  // int32 output_max_buf_num = 17;
  if (this->output_max_buf_num() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_output_max_buf_num(), target);
  }

  // string glog_save_level = 20;
  if (this->glog_save_level().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_glog_save_level().data(), static_cast<int>(this->_internal_glog_save_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AppGlobalSetting.GlobalSetting.glog_save_level");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_glog_save_level(), target);
  }

  // string glog_save_path = 21;
  if (this->glog_save_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_glog_save_path().data(), static_cast<int>(this->_internal_glog_save_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AppGlobalSetting.GlobalSetting.glog_save_path");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_glog_save_path(), target);
  }

  // string ffmpeg_log_level = 22;
  if (this->ffmpeg_log_level().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ffmpeg_log_level().data(), static_cast<int>(this->_internal_ffmpeg_log_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AppGlobalSetting.GlobalSetting.ffmpeg_log_level");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_ffmpeg_log_level(), target);
  }

  // string event_report_format = 23;
  if (this->event_report_format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_event_report_format().data(), static_cast<int>(this->_internal_event_report_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AppGlobalSetting.GlobalSetting.event_report_format");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_event_report_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppGlobalSetting.GlobalSetting)
  return target;
}

size_t GlobalSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppGlobalSetting.GlobalSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string http_server_addr = 1;
  if (this->http_server_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_http_server_addr());
  }

  // string glog_save_level = 20;
  if (this->glog_save_level().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_glog_save_level());
  }

  // string glog_save_path = 21;
  if (this->glog_save_path().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_glog_save_path());
  }

  // string ffmpeg_log_level = 22;
  if (this->ffmpeg_log_level().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ffmpeg_log_level());
  }

  // string event_report_format = 23;
  if (this->event_report_format().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_event_report_format());
  }

  // int32 http_server_port = 2;
  if (this->http_server_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_http_server_port());
  }

  // int32 input_max_buf_num = 15;
  if (this->input_max_buf_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_input_max_buf_num());
  }

  // int32 mix_max_buf_num = 16;
  if (this->mix_max_buf_num() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mix_max_buf_num());
  }

  // int32 output_max_buf_num = 17;
  if (this->output_max_buf_num() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_output_max_buf_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalSetting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AppGlobalSetting.GlobalSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalSetting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GlobalSetting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AppGlobalSetting.GlobalSetting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AppGlobalSetting.GlobalSetting)
    MergeFrom(*source);
  }
}

void GlobalSetting::MergeFrom(const GlobalSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AppGlobalSetting.GlobalSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.http_server_addr().size() > 0) {

    http_server_addr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.http_server_addr_);
  }
  if (from.glog_save_level().size() > 0) {

    glog_save_level_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.glog_save_level_);
  }
  if (from.glog_save_path().size() > 0) {

    glog_save_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.glog_save_path_);
  }
  if (from.ffmpeg_log_level().size() > 0) {

    ffmpeg_log_level_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ffmpeg_log_level_);
  }
  if (from.event_report_format().size() > 0) {

    event_report_format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.event_report_format_);
  }
  if (from.http_server_port() != 0) {
    _internal_set_http_server_port(from._internal_http_server_port());
  }
  if (from.input_max_buf_num() != 0) {
    _internal_set_input_max_buf_num(from._internal_input_max_buf_num());
  }
  if (from.mix_max_buf_num() != 0) {
    _internal_set_mix_max_buf_num(from._internal_mix_max_buf_num());
  }
  if (from.output_max_buf_num() != 0) {
    _internal_set_output_max_buf_num(from._internal_output_max_buf_num());
  }
}

void GlobalSetting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AppGlobalSetting.GlobalSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalSetting::CopyFrom(const GlobalSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppGlobalSetting.GlobalSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalSetting::IsInitialized() const {
  return true;
}

void GlobalSetting::InternalSwap(GlobalSetting* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  http_server_addr_.Swap(&other->http_server_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  glog_save_level_.Swap(&other->glog_save_level_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  glog_save_path_.Swap(&other->glog_save_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ffmpeg_log_level_.Swap(&other->ffmpeg_log_level_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  event_report_format_.Swap(&other->event_report_format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(http_server_port_, other->http_server_port_);
  swap(input_max_buf_num_, other->input_max_buf_num_);
  swap(mix_max_buf_num_, other->mix_max_buf_num_);
  swap(output_max_buf_num_, other->output_max_buf_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalSetting::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommonResponse::InitAsDefaultInstance() {
}
class CommonResponse::_Internal {
 public:
};

CommonResponse::CommonResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppGlobalSetting.CommonResponse)
}
CommonResponse::CommonResponse(const CommonResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_sync_resp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(b_sync_resp_));
  // @@protoc_insertion_point(copy_constructor:AppGlobalSetting.CommonResponse)
}

void CommonResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommonResponse_appGlobalSetting_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_sync_resp_) -
      reinterpret_cast<char*>(&code_)) + sizeof(b_sync_resp_));
}

CommonResponse::~CommonResponse() {
  // @@protoc_insertion_point(destructor:AppGlobalSetting.CommonResponse)
  SharedDtor();
}

void CommonResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommonResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommonResponse& CommonResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommonResponse_appGlobalSetting_2eproto.base);
  return *internal_default_instance();
}


void CommonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AppGlobalSetting.CommonResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_sync_resp_) -
      reinterpret_cast<char*>(&code_)) + sizeof(b_sync_resp_));
  _internal_metadata_.Clear();
}

const char* CommonResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_msg(), ptr, ctx, "AppGlobalSetting.CommonResponse.msg");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool b_sync_resp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          b_sync_resp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommonResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppGlobalSetting.CommonResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AppGlobalSetting.CommonResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // bool b_sync_resp = 3;
  if (this->b_sync_resp() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_b_sync_resp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppGlobalSetting.CommonResponse)
  return target;
}

size_t CommonResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppGlobalSetting.CommonResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // bool b_sync_resp = 3;
  if (this->b_sync_resp() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AppGlobalSetting.CommonResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommonResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AppGlobalSetting.CommonResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AppGlobalSetting.CommonResponse)
    MergeFrom(*source);
  }
}

void CommonResponse::MergeFrom(const CommonResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AppGlobalSetting.CommonResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.b_sync_resp() != 0) {
    _internal_set_b_sync_resp(from._internal_b_sync_resp());
  }
}

void CommonResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AppGlobalSetting.CommonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonResponse::CopyFrom(const CommonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppGlobalSetting.CommonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonResponse::IsInitialized() const {
  return true;
}

void CommonResponse::InternalSwap(CommonResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(b_sync_resp_, other->b_sync_resp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AppGlobalSetting
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AppGlobalSetting::GlobalSetting* Arena::CreateMaybeMessage< ::AppGlobalSetting::GlobalSetting >(Arena* arena) {
  return Arena::CreateInternal< ::AppGlobalSetting::GlobalSetting >(arena);
}
template<> PROTOBUF_NOINLINE ::AppGlobalSetting::CommonResponse* Arena::CreateMaybeMessage< ::AppGlobalSetting::CommonResponse >(Arena* arena) {
  return Arena::CreateInternal< ::AppGlobalSetting::CommonResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
