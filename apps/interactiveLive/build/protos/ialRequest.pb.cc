// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ialRequest.proto

#include "ialRequest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_davStreamletSetting_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_InputStreamletSetting_davStreamletSetting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_davStreamletSetting_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_MixStreamletSetting_davStreamletSetting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_davStreamletSetting_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_OutputStreamletSetting_davStreamletSetting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_davWaveSetting_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VideoMixLayoutUpdate_davWaveSetting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ialRequest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddNewOutput_ialRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ialRequest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamInfo_StreamInfoEntry_DoNotUse_ialRequest_2eproto;
namespace IalRequest {
class CreateRoomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoom> _instance;
} _CreateRoom_default_instance_;
class AddNewInputStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddNewInputStream> _instance;
} _AddNewInputStream_default_instance_;
class CloseOneInputStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloseOneInputStream> _instance;
} _CloseOneInputStream_default_instance_;
class GetOneInputStreamInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOneInputStreamInfo> _instance;
} _GetOneInputStreamInfo_default_instance_;
class GetAllInputStreamInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllInputStreamInfos> _instance;
} _GetAllInputStreamInfos_default_instance_;
class AddNewOutputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddNewOutput> _instance;
} _AddNewOutput_default_instance_;
class CloseOneOutputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloseOneOutput> _instance;
} _CloseOneOutput_default_instance_;
class GetOneOutputStreamInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOneOutputStreamInfo> _instance;
} _GetOneOutputStreamInfo_default_instance_;
class GetAllOutputStreamInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllOutputStreamInfos> _instance;
} _GetAllOutputStreamInfos_default_instance_;
class StreamInfo_StreamInfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamInfo_StreamInfoEntry_DoNotUse> _instance;
} _StreamInfo_StreamInfoEntry_DoNotUse_default_instance_;
class StreamInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamInfo> _instance;
} _StreamInfo_default_instance_;
class AudioMixMuteUnMuteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AudioMixMuteUnMute> _instance;
} _AudioMixMuteUnMute_default_instance_;
class VideoMixChangeLayoutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VideoMixChangeLayout> _instance;
} _VideoMixChangeLayout_default_instance_;
class VideoMixUpdateBackgroudDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VideoMixUpdateBackgroud> _instance;
} _VideoMixUpdateBackgroud_default_instance_;
class UpdateInputSettingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateInputSetting> _instance;
} _UpdateInputSetting_default_instance_;
class AddOutputSettingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOutputSetting> _instance;
} _AddOutputSetting_default_instance_;
class UpdateMixSettingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateMixSetting> _instance;
} _UpdateMixSetting_default_instance_;
}  // namespace IalRequest
static void InitDefaultsscc_info_AddNewInputStream_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_AddNewInputStream_default_instance_;
    new (ptr) ::IalRequest::AddNewInputStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::AddNewInputStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddNewInputStream_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddNewInputStream_ialRequest_2eproto}, {
      &scc_info_InputStreamletSetting_davStreamletSetting_2eproto.base,}};

static void InitDefaultsscc_info_AddNewOutput_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_AddNewOutput_default_instance_;
    new (ptr) ::IalRequest::AddNewOutput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::AddNewOutput::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddNewOutput_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddNewOutput_ialRequest_2eproto}, {
      &scc_info_OutputStreamletSetting_davStreamletSetting_2eproto.base,}};

static void InitDefaultsscc_info_AddOutputSetting_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_AddOutputSetting_default_instance_;
    new (ptr) ::IalRequest::AddOutputSetting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::AddOutputSetting::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddOutputSetting_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddOutputSetting_ialRequest_2eproto}, {
      &scc_info_OutputStreamletSetting_davStreamletSetting_2eproto.base,}};

static void InitDefaultsscc_info_AudioMixMuteUnMute_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_AudioMixMuteUnMute_default_instance_;
    new (ptr) ::IalRequest::AudioMixMuteUnMute();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::AudioMixMuteUnMute::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioMixMuteUnMute_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AudioMixMuteUnMute_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_CloseOneInputStream_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_CloseOneInputStream_default_instance_;
    new (ptr) ::IalRequest::CloseOneInputStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::CloseOneInputStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloseOneInputStream_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CloseOneInputStream_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_CloseOneOutput_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_CloseOneOutput_default_instance_;
    new (ptr) ::IalRequest::CloseOneOutput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::CloseOneOutput::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloseOneOutput_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CloseOneOutput_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_CreateRoom_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_CreateRoom_default_instance_;
    new (ptr) ::IalRequest::CreateRoom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::CreateRoom::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateRoom_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateRoom_ialRequest_2eproto}, {
      &scc_info_AddNewOutput_ialRequest_2eproto.base,}};

static void InitDefaultsscc_info_GetAllInputStreamInfos_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_GetAllInputStreamInfos_default_instance_;
    new (ptr) ::IalRequest::GetAllInputStreamInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::GetAllInputStreamInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllInputStreamInfos_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllInputStreamInfos_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_GetAllOutputStreamInfos_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_GetAllOutputStreamInfos_default_instance_;
    new (ptr) ::IalRequest::GetAllOutputStreamInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::GetAllOutputStreamInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllOutputStreamInfos_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllOutputStreamInfos_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_GetOneInputStreamInfo_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_GetOneInputStreamInfo_default_instance_;
    new (ptr) ::IalRequest::GetOneInputStreamInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::GetOneInputStreamInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOneInputStreamInfo_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOneInputStreamInfo_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_GetOneOutputStreamInfo_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_GetOneOutputStreamInfo_default_instance_;
    new (ptr) ::IalRequest::GetOneOutputStreamInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::GetOneOutputStreamInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOneOutputStreamInfo_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOneOutputStreamInfo_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_StreamInfo_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_StreamInfo_default_instance_;
    new (ptr) ::IalRequest::StreamInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::StreamInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StreamInfo_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StreamInfo_ialRequest_2eproto}, {
      &scc_info_StreamInfo_StreamInfoEntry_DoNotUse_ialRequest_2eproto.base,}};

static void InitDefaultsscc_info_StreamInfo_StreamInfoEntry_DoNotUse_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_StreamInfo_StreamInfoEntry_DoNotUse_default_instance_;
    new (ptr) ::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse();
  }
  ::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamInfo_StreamInfoEntry_DoNotUse_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamInfo_StreamInfoEntry_DoNotUse_ialRequest_2eproto}, {}};

static void InitDefaultsscc_info_UpdateInputSetting_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_UpdateInputSetting_default_instance_;
    new (ptr) ::IalRequest::UpdateInputSetting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::UpdateInputSetting::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateInputSetting_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateInputSetting_ialRequest_2eproto}, {
      &scc_info_InputStreamletSetting_davStreamletSetting_2eproto.base,}};

static void InitDefaultsscc_info_UpdateMixSetting_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_UpdateMixSetting_default_instance_;
    new (ptr) ::IalRequest::UpdateMixSetting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::UpdateMixSetting::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateMixSetting_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateMixSetting_ialRequest_2eproto}, {
      &scc_info_MixStreamletSetting_davStreamletSetting_2eproto.base,}};

static void InitDefaultsscc_info_VideoMixChangeLayout_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_VideoMixChangeLayout_default_instance_;
    new (ptr) ::IalRequest::VideoMixChangeLayout();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::VideoMixChangeLayout::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VideoMixChangeLayout_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VideoMixChangeLayout_ialRequest_2eproto}, {
      &scc_info_VideoMixLayoutUpdate_davWaveSetting_2eproto.base,}};

static void InitDefaultsscc_info_VideoMixUpdateBackgroud_ialRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IalRequest::_VideoMixUpdateBackgroud_default_instance_;
    new (ptr) ::IalRequest::VideoMixUpdateBackgroud();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IalRequest::VideoMixUpdateBackgroud::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VideoMixUpdateBackgroud_ialRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VideoMixUpdateBackgroud_ialRequest_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ialRequest_2eproto[17];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ialRequest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ialRequest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ialRequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::CreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::CreateRoom, room_id_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::CreateRoom, input_urls_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::CreateRoom, room_output_base_url_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::CreateRoom, output_stream_infos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewInputStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewInputStream, input_url_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewInputStream, specific_setting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::CloseOneInputStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::CloseOneInputStream, input_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetOneInputStreamInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetOneInputStreamInfo, input_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetAllInputStreamInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetAllInputStreamInfos, format_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewOutput, output_setting_id_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewOutput, output_urls_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddNewOutput, specific_setting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::CloseOneOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::CloseOneOutput, output_setting_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetOneOutputStreamInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetOneOutputStreamInfo, output_setting_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetAllOutputStreamInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::GetAllOutputStreamInfos, format_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo, stream_name_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::StreamInfo, stream_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AudioMixMuteUnMute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AudioMixMuteUnMute, mute_input_urls_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::AudioMixMuteUnMute, unmute_input_urls_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::VideoMixChangeLayout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::VideoMixChangeLayout, new_layout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::VideoMixUpdateBackgroud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::VideoMixUpdateBackgroud, backgroud_image_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::UpdateInputSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::UpdateInputSetting, input_setting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddOutputSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddOutputSetting, output_setting_id_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::AddOutputSetting, output_setting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IalRequest::UpdateMixSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IalRequest::UpdateMixSetting, output_setting_id_),
  PROTOBUF_FIELD_OFFSET(::IalRequest::UpdateMixSetting, mix_setting_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IalRequest::CreateRoom)},
  { 9, -1, sizeof(::IalRequest::AddNewInputStream)},
  { 16, -1, sizeof(::IalRequest::CloseOneInputStream)},
  { 22, -1, sizeof(::IalRequest::GetOneInputStreamInfo)},
  { 28, -1, sizeof(::IalRequest::GetAllInputStreamInfos)},
  { 34, -1, sizeof(::IalRequest::AddNewOutput)},
  { 42, -1, sizeof(::IalRequest::CloseOneOutput)},
  { 48, -1, sizeof(::IalRequest::GetOneOutputStreamInfo)},
  { 54, -1, sizeof(::IalRequest::GetAllOutputStreamInfos)},
  { 60, 67, sizeof(::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse)},
  { 69, -1, sizeof(::IalRequest::StreamInfo)},
  { 76, -1, sizeof(::IalRequest::AudioMixMuteUnMute)},
  { 83, -1, sizeof(::IalRequest::VideoMixChangeLayout)},
  { 89, -1, sizeof(::IalRequest::VideoMixUpdateBackgroud)},
  { 95, -1, sizeof(::IalRequest::UpdateInputSetting)},
  { 101, -1, sizeof(::IalRequest::AddOutputSetting)},
  { 108, -1, sizeof(::IalRequest::UpdateMixSetting)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_CreateRoom_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_AddNewInputStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_CloseOneInputStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_GetOneInputStreamInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_GetAllInputStreamInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_AddNewOutput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_CloseOneOutput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_GetOneOutputStreamInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_GetAllOutputStreamInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_StreamInfo_StreamInfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_StreamInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_AudioMixMuteUnMute_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_VideoMixChangeLayout_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_VideoMixUpdateBackgroud_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_UpdateInputSetting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_AddOutputSetting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IalRequest::_UpdateMixSetting_default_instance_),
};

const char descriptor_table_protodef_ialRequest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020ialRequest.proto\022\nIalRequest\032\024davWaveS"
  "etting.proto\032\031davStreamletSetting.proto\""
  "\206\001\n\nCreateRoom\022\017\n\007room_id\030\001 \001(\t\022\022\n\ninput"
  "_urls\030\002 \003(\t\022\034\n\024room_output_base_url\030\003 \001("
  "\t\0225\n\023output_stream_infos\030\004 \003(\0132\030.IalRequ"
  "est.AddNewOutput\"l\n\021AddNewInputStream\022\021\n"
  "\tinput_url\030\001 \001(\t\022D\n\020specific_setting\030\002 \001"
  "(\0132*.DavStreamletSetting.InputStreamletS"
  "etting\"(\n\023CloseOneInputStream\022\021\n\tinput_u"
  "rl\030\001 \001(\t\"*\n\025GetOneInputStreamInfo\022\021\n\tinp"
  "ut_url\030\001 \001(\t\"(\n\026GetAllInputStreamInfos\022\016"
  "\n\006format\030\001 \001(\t\"\205\001\n\014AddNewOutput\022\031\n\021outpu"
  "t_setting_id\030\001 \001(\t\022\023\n\013output_urls\030\002 \003(\t\022"
  "E\n\020specific_setting\030\003 \001(\0132+.DavStreamlet"
  "Setting.OutputStreamletSetting\"+\n\016CloseO"
  "neOutput\022\031\n\021output_setting_id\030\001 \001(\t\"4\n\026G"
  "etOneOutputStreamInfo\022\032\n\022output_setting_"
  "ids\030\001 \001(\t\")\n\027GetAllOutputStreamInfos\022\016\n\006"
  "format\030\001 \001(\t\"\221\001\n\nStreamInfo\022\023\n\013stream_na"
  "me\030\001 \001(\t\022;\n\013stream_info\030\002 \003(\0132&.IalReque"
  "st.StreamInfo.StreamInfoEntry\0321\n\017StreamI"
  "nfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
  "\"H\n\022AudioMixMuteUnMute\022\027\n\017mute_input_url"
  "s\030\001 \003(\t\022\031\n\021unmute_input_urls\030\002 \003(\t\"P\n\024Vi"
  "deoMixChangeLayout\0228\n\nnew_layout\030\001 \001(\0132$"
  ".DavWaveSetting.VideoMixLayoutUpdate\"6\n\027"
  "VideoMixUpdateBackgroud\022\033\n\023backgroud_ima"
  "ge_url\030\001 \001(\t\"W\n\022UpdateInputSetting\022A\n\rin"
  "put_setting\030\001 \001(\0132*.DavStreamletSetting."
  "InputStreamletSetting\"r\n\020AddOutputSettin"
  "g\022\031\n\021output_setting_id\030\001 \001(\t\022C\n\016output_s"
  "etting\030\002 \001(\0132+.DavStreamletSetting.Outpu"
  "tStreamletSetting\"l\n\020UpdateMixSetting\022\031\n"
  "\021output_setting_id\030\001 \001(\t\022=\n\013mix_setting\030"
  "\002 \001(\0132(.DavStreamletSetting.MixStreamlet"
  "Settingb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ialRequest_2eproto_deps[2] = {
  &::descriptor_table_davStreamletSetting_2eproto,
  &::descriptor_table_davWaveSetting_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ialRequest_2eproto_sccs[17] = {
  &scc_info_AddNewInputStream_ialRequest_2eproto.base,
  &scc_info_AddNewOutput_ialRequest_2eproto.base,
  &scc_info_AddOutputSetting_ialRequest_2eproto.base,
  &scc_info_AudioMixMuteUnMute_ialRequest_2eproto.base,
  &scc_info_CloseOneInputStream_ialRequest_2eproto.base,
  &scc_info_CloseOneOutput_ialRequest_2eproto.base,
  &scc_info_CreateRoom_ialRequest_2eproto.base,
  &scc_info_GetAllInputStreamInfos_ialRequest_2eproto.base,
  &scc_info_GetAllOutputStreamInfos_ialRequest_2eproto.base,
  &scc_info_GetOneInputStreamInfo_ialRequest_2eproto.base,
  &scc_info_GetOneOutputStreamInfo_ialRequest_2eproto.base,
  &scc_info_StreamInfo_ialRequest_2eproto.base,
  &scc_info_StreamInfo_StreamInfoEntry_DoNotUse_ialRequest_2eproto.base,
  &scc_info_UpdateInputSetting_ialRequest_2eproto.base,
  &scc_info_UpdateMixSetting_ialRequest_2eproto.base,
  &scc_info_VideoMixChangeLayout_ialRequest_2eproto.base,
  &scc_info_VideoMixUpdateBackgroud_ialRequest_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ialRequest_2eproto_once;
static bool descriptor_table_ialRequest_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ialRequest_2eproto = {
  &descriptor_table_ialRequest_2eproto_initialized, descriptor_table_protodef_ialRequest_2eproto, "ialRequest.proto", 1415,
  &descriptor_table_ialRequest_2eproto_once, descriptor_table_ialRequest_2eproto_sccs, descriptor_table_ialRequest_2eproto_deps, 17, 2,
  schemas, file_default_instances, TableStruct_ialRequest_2eproto::offsets,
  file_level_metadata_ialRequest_2eproto, 17, file_level_enum_descriptors_ialRequest_2eproto, file_level_service_descriptors_ialRequest_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ialRequest_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ialRequest_2eproto), true);
namespace IalRequest {

// ===================================================================

void CreateRoom::InitAsDefaultInstance() {
}
class CreateRoom::_Internal {
 public:
};

CreateRoom::CreateRoom()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.CreateRoom)
}
CreateRoom::CreateRoom(const CreateRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      input_urls_(from.input_urls_),
      output_stream_infos_(from.output_stream_infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_room_id().empty()) {
    room_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  room_output_base_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_room_output_base_url().empty()) {
    room_output_base_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.room_output_base_url_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.CreateRoom)
}

void CreateRoom::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateRoom_ialRequest_2eproto.base);
  room_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  room_output_base_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateRoom::~CreateRoom() {
  // @@protoc_insertion_point(destructor:IalRequest.CreateRoom)
  SharedDtor();
}

void CreateRoom::SharedDtor() {
  room_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  room_output_base_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoom& CreateRoom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoom_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void CreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.CreateRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_urls_.Clear();
  output_stream_infos_.Clear();
  room_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  room_output_base_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* CreateRoom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string room_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_room_id(), ptr, ctx, "IalRequest.CreateRoom.room_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string input_urls = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_input_urls(), ptr, ctx, "IalRequest.CreateRoom.input_urls");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string room_output_base_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_room_output_base_url(), ptr, ctx, "IalRequest.CreateRoom.room_output_base_url");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .IalRequest.AddNewOutput output_stream_infos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_stream_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoom::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.CreateRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_id = 1;
  if (this->room_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_room_id().data(), static_cast<int>(this->_internal_room_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.CreateRoom.room_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_room_id(), target);
  }

  // repeated string input_urls = 2;
  for (int i = 0, n = this->_internal_input_urls_size(); i < n; i++) {
    const auto& s = this->_internal_input_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.CreateRoom.input_urls");
    target = stream->WriteString(2, s, target);
  }

  // string room_output_base_url = 3;
  if (this->room_output_base_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_room_output_base_url().data(), static_cast<int>(this->_internal_room_output_base_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.CreateRoom.room_output_base_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_room_output_base_url(), target);
  }

  // repeated .IalRequest.AddNewOutput output_stream_infos = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_stream_infos_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(4, this->_internal_output_stream_infos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.CreateRoom)
  return target;
}

size_t CreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.CreateRoom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string input_urls = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(input_urls_.size());
  for (int i = 0, n = input_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      input_urls_.Get(i));
  }

  // repeated .IalRequest.AddNewOutput output_stream_infos = 4;
  total_size += 1UL * this->_internal_output_stream_infos_size();
  for (const auto& msg : this->output_stream_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string room_id = 1;
  if (this->room_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_room_id());
  }

  // string room_output_base_url = 3;
  if (this->room_output_base_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_room_output_base_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.CreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.CreateRoom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.CreateRoom)
    MergeFrom(*source);
  }
}

void CreateRoom::MergeFrom(const CreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.CreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_urls_.MergeFrom(from.input_urls_);
  output_stream_infos_.MergeFrom(from.output_stream_infos_);
  if (from.room_id().size() > 0) {

    room_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  if (from.room_output_base_url().size() > 0) {

    room_output_base_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.room_output_base_url_);
  }
}

void CreateRoom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoom::CopyFrom(const CreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoom::IsInitialized() const {
  return true;
}

void CreateRoom::InternalSwap(CreateRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_urls_.InternalSwap(&other->input_urls_);
  output_stream_infos_.InternalSwap(&other->output_stream_infos_);
  room_id_.Swap(&other->room_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  room_output_base_url_.Swap(&other->room_output_base_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoom::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddNewInputStream::InitAsDefaultInstance() {
  ::IalRequest::_AddNewInputStream_default_instance_._instance.get_mutable()->specific_setting_ = const_cast< ::DavStreamletSetting::InputStreamletSetting*>(
      ::DavStreamletSetting::InputStreamletSetting::internal_default_instance());
}
class AddNewInputStream::_Internal {
 public:
  static const ::DavStreamletSetting::InputStreamletSetting& specific_setting(const AddNewInputStream* msg);
};

const ::DavStreamletSetting::InputStreamletSetting&
AddNewInputStream::_Internal::specific_setting(const AddNewInputStream* msg) {
  return *msg->specific_setting_;
}
void AddNewInputStream::clear_specific_setting() {
  if (GetArenaNoVirtual() == nullptr && specific_setting_ != nullptr) {
    delete specific_setting_;
  }
  specific_setting_ = nullptr;
}
AddNewInputStream::AddNewInputStream()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.AddNewInputStream)
}
AddNewInputStream::AddNewInputStream(const AddNewInputStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_url().empty()) {
    input_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  if (from._internal_has_specific_setting()) {
    specific_setting_ = new ::DavStreamletSetting::InputStreamletSetting(*from.specific_setting_);
  } else {
    specific_setting_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.AddNewInputStream)
}

void AddNewInputStream::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddNewInputStream_ialRequest_2eproto.base);
  input_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  specific_setting_ = nullptr;
}

AddNewInputStream::~AddNewInputStream() {
  // @@protoc_insertion_point(destructor:IalRequest.AddNewInputStream)
  SharedDtor();
}

void AddNewInputStream::SharedDtor() {
  input_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete specific_setting_;
}

void AddNewInputStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddNewInputStream& AddNewInputStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddNewInputStream_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void AddNewInputStream::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.AddNewInputStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && specific_setting_ != nullptr) {
    delete specific_setting_;
  }
  specific_setting_ = nullptr;
  _internal_metadata_.Clear();
}

const char* AddNewInputStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string input_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_input_url(), ptr, ctx, "IalRequest.AddNewInputStream.input_url");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DavStreamletSetting.InputStreamletSetting specific_setting = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_specific_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddNewInputStream::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.AddNewInputStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_url = 1;
  if (this->input_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_url().data(), static_cast<int>(this->_internal_input_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.AddNewInputStream.input_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_input_url(), target);
  }

  // .DavStreamletSetting.InputStreamletSetting specific_setting = 2;
  if (this->has_specific_setting()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::specific_setting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.AddNewInputStream)
  return target;
}

size_t AddNewInputStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.AddNewInputStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string input_url = 1;
  if (this->input_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_url());
  }

  // .DavStreamletSetting.InputStreamletSetting specific_setting = 2;
  if (this->has_specific_setting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *specific_setting_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNewInputStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.AddNewInputStream)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewInputStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddNewInputStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.AddNewInputStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.AddNewInputStream)
    MergeFrom(*source);
  }
}

void AddNewInputStream::MergeFrom(const AddNewInputStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.AddNewInputStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_url().size() > 0) {

    input_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  if (from.has_specific_setting()) {
    _internal_mutable_specific_setting()->::DavStreamletSetting::InputStreamletSetting::MergeFrom(from._internal_specific_setting());
  }
}

void AddNewInputStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.AddNewInputStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewInputStream::CopyFrom(const AddNewInputStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.AddNewInputStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewInputStream::IsInitialized() const {
  return true;
}

void AddNewInputStream::InternalSwap(AddNewInputStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_url_.Swap(&other->input_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(specific_setting_, other->specific_setting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddNewInputStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloseOneInputStream::InitAsDefaultInstance() {
}
class CloseOneInputStream::_Internal {
 public:
};

CloseOneInputStream::CloseOneInputStream()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.CloseOneInputStream)
}
CloseOneInputStream::CloseOneInputStream(const CloseOneInputStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_url().empty()) {
    input_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.CloseOneInputStream)
}

void CloseOneInputStream::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloseOneInputStream_ialRequest_2eproto.base);
  input_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CloseOneInputStream::~CloseOneInputStream() {
  // @@protoc_insertion_point(destructor:IalRequest.CloseOneInputStream)
  SharedDtor();
}

void CloseOneInputStream::SharedDtor() {
  input_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CloseOneInputStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloseOneInputStream& CloseOneInputStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloseOneInputStream_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void CloseOneInputStream::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.CloseOneInputStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* CloseOneInputStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string input_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_input_url(), ptr, ctx, "IalRequest.CloseOneInputStream.input_url");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloseOneInputStream::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.CloseOneInputStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_url = 1;
  if (this->input_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_url().data(), static_cast<int>(this->_internal_input_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.CloseOneInputStream.input_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_input_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.CloseOneInputStream)
  return target;
}

size_t CloseOneInputStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.CloseOneInputStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string input_url = 1;
  if (this->input_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseOneInputStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.CloseOneInputStream)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseOneInputStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloseOneInputStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.CloseOneInputStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.CloseOneInputStream)
    MergeFrom(*source);
  }
}

void CloseOneInputStream::MergeFrom(const CloseOneInputStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.CloseOneInputStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_url().size() > 0) {

    input_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
}

void CloseOneInputStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.CloseOneInputStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseOneInputStream::CopyFrom(const CloseOneInputStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.CloseOneInputStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseOneInputStream::IsInitialized() const {
  return true;
}

void CloseOneInputStream::InternalSwap(CloseOneInputStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_url_.Swap(&other->input_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseOneInputStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOneInputStreamInfo::InitAsDefaultInstance() {
}
class GetOneInputStreamInfo::_Internal {
 public:
};

GetOneInputStreamInfo::GetOneInputStreamInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.GetOneInputStreamInfo)
}
GetOneInputStreamInfo::GetOneInputStreamInfo(const GetOneInputStreamInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_url().empty()) {
    input_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.GetOneInputStreamInfo)
}

void GetOneInputStreamInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOneInputStreamInfo_ialRequest_2eproto.base);
  input_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOneInputStreamInfo::~GetOneInputStreamInfo() {
  // @@protoc_insertion_point(destructor:IalRequest.GetOneInputStreamInfo)
  SharedDtor();
}

void GetOneInputStreamInfo::SharedDtor() {
  input_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOneInputStreamInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOneInputStreamInfo& GetOneInputStreamInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOneInputStreamInfo_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void GetOneInputStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.GetOneInputStreamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetOneInputStreamInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string input_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_input_url(), ptr, ctx, "IalRequest.GetOneInputStreamInfo.input_url");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOneInputStreamInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.GetOneInputStreamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_url = 1;
  if (this->input_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_url().data(), static_cast<int>(this->_internal_input_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.GetOneInputStreamInfo.input_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_input_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.GetOneInputStreamInfo)
  return target;
}

size_t GetOneInputStreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.GetOneInputStreamInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string input_url = 1;
  if (this->input_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOneInputStreamInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.GetOneInputStreamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOneInputStreamInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOneInputStreamInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.GetOneInputStreamInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.GetOneInputStreamInfo)
    MergeFrom(*source);
  }
}

void GetOneInputStreamInfo::MergeFrom(const GetOneInputStreamInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.GetOneInputStreamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_url().size() > 0) {

    input_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
}

void GetOneInputStreamInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.GetOneInputStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOneInputStreamInfo::CopyFrom(const GetOneInputStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.GetOneInputStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOneInputStreamInfo::IsInitialized() const {
  return true;
}

void GetOneInputStreamInfo::InternalSwap(GetOneInputStreamInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_url_.Swap(&other->input_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOneInputStreamInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllInputStreamInfos::InitAsDefaultInstance() {
}
class GetAllInputStreamInfos::_Internal {
 public:
};

GetAllInputStreamInfos::GetAllInputStreamInfos()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.GetAllInputStreamInfos)
}
GetAllInputStreamInfos::GetAllInputStreamInfos(const GetAllInputStreamInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_format().empty()) {
    format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.GetAllInputStreamInfos)
}

void GetAllInputStreamInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllInputStreamInfos_ialRequest_2eproto.base);
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAllInputStreamInfos::~GetAllInputStreamInfos() {
  // @@protoc_insertion_point(destructor:IalRequest.GetAllInputStreamInfos)
  SharedDtor();
}

void GetAllInputStreamInfos::SharedDtor() {
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllInputStreamInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllInputStreamInfos& GetAllInputStreamInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllInputStreamInfos_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void GetAllInputStreamInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.GetAllInputStreamInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetAllInputStreamInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_format(), ptr, ctx, "IalRequest.GetAllInputStreamInfos.format");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllInputStreamInfos::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.GetAllInputStreamInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string format = 1;
  if (this->format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.GetAllInputStreamInfos.format");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.GetAllInputStreamInfos)
  return target;
}

size_t GetAllInputStreamInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.GetAllInputStreamInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string format = 1;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllInputStreamInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.GetAllInputStreamInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllInputStreamInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllInputStreamInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.GetAllInputStreamInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.GetAllInputStreamInfos)
    MergeFrom(*source);
  }
}

void GetAllInputStreamInfos::MergeFrom(const GetAllInputStreamInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.GetAllInputStreamInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.format().size() > 0) {

    format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
}

void GetAllInputStreamInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.GetAllInputStreamInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllInputStreamInfos::CopyFrom(const GetAllInputStreamInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.GetAllInputStreamInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllInputStreamInfos::IsInitialized() const {
  return true;
}

void GetAllInputStreamInfos::InternalSwap(GetAllInputStreamInfos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  format_.Swap(&other->format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllInputStreamInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddNewOutput::InitAsDefaultInstance() {
  ::IalRequest::_AddNewOutput_default_instance_._instance.get_mutable()->specific_setting_ = const_cast< ::DavStreamletSetting::OutputStreamletSetting*>(
      ::DavStreamletSetting::OutputStreamletSetting::internal_default_instance());
}
class AddNewOutput::_Internal {
 public:
  static const ::DavStreamletSetting::OutputStreamletSetting& specific_setting(const AddNewOutput* msg);
};

const ::DavStreamletSetting::OutputStreamletSetting&
AddNewOutput::_Internal::specific_setting(const AddNewOutput* msg) {
  return *msg->specific_setting_;
}
void AddNewOutput::clear_specific_setting() {
  if (GetArenaNoVirtual() == nullptr && specific_setting_ != nullptr) {
    delete specific_setting_;
  }
  specific_setting_ = nullptr;
}
AddNewOutput::AddNewOutput()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.AddNewOutput)
}
AddNewOutput::AddNewOutput(const AddNewOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      output_urls_(from.output_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_setting_id().empty()) {
    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  if (from._internal_has_specific_setting()) {
    specific_setting_ = new ::DavStreamletSetting::OutputStreamletSetting(*from.specific_setting_);
  } else {
    specific_setting_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.AddNewOutput)
}

void AddNewOutput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddNewOutput_ialRequest_2eproto.base);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  specific_setting_ = nullptr;
}

AddNewOutput::~AddNewOutput() {
  // @@protoc_insertion_point(destructor:IalRequest.AddNewOutput)
  SharedDtor();
}

void AddNewOutput::SharedDtor() {
  output_setting_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete specific_setting_;
}

void AddNewOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddNewOutput& AddNewOutput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddNewOutput_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void AddNewOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.AddNewOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_urls_.Clear();
  output_setting_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && specific_setting_ != nullptr) {
    delete specific_setting_;
  }
  specific_setting_ = nullptr;
  _internal_metadata_.Clear();
}

const char* AddNewOutput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string output_setting_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_output_setting_id(), ptr, ctx, "IalRequest.AddNewOutput.output_setting_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string output_urls = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_output_urls(), ptr, ctx, "IalRequest.AddNewOutput.output_urls");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .DavStreamletSetting.OutputStreamletSetting specific_setting = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_specific_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddNewOutput::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.AddNewOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_setting_id().data(), static_cast<int>(this->_internal_output_setting_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.AddNewOutput.output_setting_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_output_setting_id(), target);
  }

  // repeated string output_urls = 2;
  for (int i = 0, n = this->_internal_output_urls_size(); i < n; i++) {
    const auto& s = this->_internal_output_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.AddNewOutput.output_urls");
    target = stream->WriteString(2, s, target);
  }

  // .DavStreamletSetting.OutputStreamletSetting specific_setting = 3;
  if (this->has_specific_setting()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::specific_setting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.AddNewOutput)
  return target;
}

size_t AddNewOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.AddNewOutput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string output_urls = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(output_urls_.size());
  for (int i = 0, n = output_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      output_urls_.Get(i));
  }

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_setting_id());
  }

  // .DavStreamletSetting.OutputStreamletSetting specific_setting = 3;
  if (this->has_specific_setting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *specific_setting_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNewOutput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.AddNewOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewOutput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddNewOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.AddNewOutput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.AddNewOutput)
    MergeFrom(*source);
  }
}

void AddNewOutput::MergeFrom(const AddNewOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.AddNewOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_urls_.MergeFrom(from.output_urls_);
  if (from.output_setting_id().size() > 0) {

    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  if (from.has_specific_setting()) {
    _internal_mutable_specific_setting()->::DavStreamletSetting::OutputStreamletSetting::MergeFrom(from._internal_specific_setting());
  }
}

void AddNewOutput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.AddNewOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewOutput::CopyFrom(const AddNewOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.AddNewOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewOutput::IsInitialized() const {
  return true;
}

void AddNewOutput::InternalSwap(AddNewOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_urls_.InternalSwap(&other->output_urls_);
  output_setting_id_.Swap(&other->output_setting_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(specific_setting_, other->specific_setting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddNewOutput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloseOneOutput::InitAsDefaultInstance() {
}
class CloseOneOutput::_Internal {
 public:
};

CloseOneOutput::CloseOneOutput()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.CloseOneOutput)
}
CloseOneOutput::CloseOneOutput(const CloseOneOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_setting_id().empty()) {
    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.CloseOneOutput)
}

void CloseOneOutput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloseOneOutput_ialRequest_2eproto.base);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CloseOneOutput::~CloseOneOutput() {
  // @@protoc_insertion_point(destructor:IalRequest.CloseOneOutput)
  SharedDtor();
}

void CloseOneOutput::SharedDtor() {
  output_setting_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CloseOneOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloseOneOutput& CloseOneOutput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloseOneOutput_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void CloseOneOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.CloseOneOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_setting_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* CloseOneOutput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string output_setting_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_output_setting_id(), ptr, ctx, "IalRequest.CloseOneOutput.output_setting_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloseOneOutput::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.CloseOneOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_setting_id().data(), static_cast<int>(this->_internal_output_setting_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.CloseOneOutput.output_setting_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_output_setting_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.CloseOneOutput)
  return target;
}

size_t CloseOneOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.CloseOneOutput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_setting_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseOneOutput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.CloseOneOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseOneOutput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloseOneOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.CloseOneOutput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.CloseOneOutput)
    MergeFrom(*source);
  }
}

void CloseOneOutput::MergeFrom(const CloseOneOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.CloseOneOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_setting_id().size() > 0) {

    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
}

void CloseOneOutput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.CloseOneOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseOneOutput::CopyFrom(const CloseOneOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.CloseOneOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseOneOutput::IsInitialized() const {
  return true;
}

void CloseOneOutput::InternalSwap(CloseOneOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_setting_id_.Swap(&other->output_setting_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseOneOutput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOneOutputStreamInfo::InitAsDefaultInstance() {
}
class GetOneOutputStreamInfo::_Internal {
 public:
};

GetOneOutputStreamInfo::GetOneOutputStreamInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.GetOneOutputStreamInfo)
}
GetOneOutputStreamInfo::GetOneOutputStreamInfo(const GetOneOutputStreamInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_setting_ids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_setting_ids().empty()) {
    output_setting_ids_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_ids_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.GetOneOutputStreamInfo)
}

void GetOneOutputStreamInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOneOutputStreamInfo_ialRequest_2eproto.base);
  output_setting_ids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOneOutputStreamInfo::~GetOneOutputStreamInfo() {
  // @@protoc_insertion_point(destructor:IalRequest.GetOneOutputStreamInfo)
  SharedDtor();
}

void GetOneOutputStreamInfo::SharedDtor() {
  output_setting_ids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOneOutputStreamInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOneOutputStreamInfo& GetOneOutputStreamInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOneOutputStreamInfo_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void GetOneOutputStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.GetOneOutputStreamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_setting_ids_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetOneOutputStreamInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string output_setting_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_output_setting_ids(), ptr, ctx, "IalRequest.GetOneOutputStreamInfo.output_setting_ids");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOneOutputStreamInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.GetOneOutputStreamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_setting_ids = 1;
  if (this->output_setting_ids().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_setting_ids().data(), static_cast<int>(this->_internal_output_setting_ids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.GetOneOutputStreamInfo.output_setting_ids");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_output_setting_ids(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.GetOneOutputStreamInfo)
  return target;
}

size_t GetOneOutputStreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.GetOneOutputStreamInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_setting_ids = 1;
  if (this->output_setting_ids().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_setting_ids());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOneOutputStreamInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.GetOneOutputStreamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOneOutputStreamInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOneOutputStreamInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.GetOneOutputStreamInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.GetOneOutputStreamInfo)
    MergeFrom(*source);
  }
}

void GetOneOutputStreamInfo::MergeFrom(const GetOneOutputStreamInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.GetOneOutputStreamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_setting_ids().size() > 0) {

    output_setting_ids_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_ids_);
  }
}

void GetOneOutputStreamInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.GetOneOutputStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOneOutputStreamInfo::CopyFrom(const GetOneOutputStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.GetOneOutputStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOneOutputStreamInfo::IsInitialized() const {
  return true;
}

void GetOneOutputStreamInfo::InternalSwap(GetOneOutputStreamInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_setting_ids_.Swap(&other->output_setting_ids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOneOutputStreamInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllOutputStreamInfos::InitAsDefaultInstance() {
}
class GetAllOutputStreamInfos::_Internal {
 public:
};

GetAllOutputStreamInfos::GetAllOutputStreamInfos()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.GetAllOutputStreamInfos)
}
GetAllOutputStreamInfos::GetAllOutputStreamInfos(const GetAllOutputStreamInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_format().empty()) {
    format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.GetAllOutputStreamInfos)
}

void GetAllOutputStreamInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllOutputStreamInfos_ialRequest_2eproto.base);
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAllOutputStreamInfos::~GetAllOutputStreamInfos() {
  // @@protoc_insertion_point(destructor:IalRequest.GetAllOutputStreamInfos)
  SharedDtor();
}

void GetAllOutputStreamInfos::SharedDtor() {
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllOutputStreamInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllOutputStreamInfos& GetAllOutputStreamInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllOutputStreamInfos_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void GetAllOutputStreamInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.GetAllOutputStreamInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetAllOutputStreamInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_format(), ptr, ctx, "IalRequest.GetAllOutputStreamInfos.format");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllOutputStreamInfos::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.GetAllOutputStreamInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string format = 1;
  if (this->format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.GetAllOutputStreamInfos.format");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.GetAllOutputStreamInfos)
  return target;
}

size_t GetAllOutputStreamInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.GetAllOutputStreamInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string format = 1;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllOutputStreamInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.GetAllOutputStreamInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllOutputStreamInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllOutputStreamInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.GetAllOutputStreamInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.GetAllOutputStreamInfos)
    MergeFrom(*source);
  }
}

void GetAllOutputStreamInfos::MergeFrom(const GetAllOutputStreamInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.GetAllOutputStreamInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.format().size() > 0) {

    format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
}

void GetAllOutputStreamInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.GetAllOutputStreamInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllOutputStreamInfos::CopyFrom(const GetAllOutputStreamInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.GetAllOutputStreamInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllOutputStreamInfos::IsInitialized() const {
  return true;
}

void GetAllOutputStreamInfos::InternalSwap(GetAllOutputStreamInfos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  format_.Swap(&other->format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllOutputStreamInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StreamInfo_StreamInfoEntry_DoNotUse::StreamInfo_StreamInfoEntry_DoNotUse() {}
StreamInfo_StreamInfoEntry_DoNotUse::StreamInfo_StreamInfoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StreamInfo_StreamInfoEntry_DoNotUse::MergeFrom(const StreamInfo_StreamInfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StreamInfo_StreamInfoEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void StreamInfo_StreamInfoEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void StreamInfo::InitAsDefaultInstance() {
}
class StreamInfo::_Internal {
 public:
};

StreamInfo::StreamInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.StreamInfo)
}
StreamInfo::StreamInfo(const StreamInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stream_info_.MergeFrom(from.stream_info_);
  stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_name().empty()) {
    stream_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.stream_name_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.StreamInfo)
}

void StreamInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamInfo_ialRequest_2eproto.base);
  stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StreamInfo::~StreamInfo() {
  // @@protoc_insertion_point(destructor:IalRequest.StreamInfo)
  SharedDtor();
}

void StreamInfo::SharedDtor() {
  stream_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamInfo& StreamInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamInfo_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void StreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.StreamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_info_.Clear();
  stream_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* StreamInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string stream_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_stream_name(), ptr, ctx, "IalRequest.StreamInfo.stream_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> stream_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&stream_info_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.StreamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_name = 1;
  if (this->stream_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_name().data(), static_cast<int>(this->_internal_stream_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.StreamInfo.stream_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stream_name(), target);
  }

  // map<string, string> stream_info = 2;
  if (!this->_internal_stream_info().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "IalRequest.StreamInfo.StreamInfoEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "IalRequest.StreamInfo.StreamInfoEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_stream_info().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_stream_info().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_stream_info().begin();
          it != this->_internal_stream_info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StreamInfo_StreamInfoEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_stream_info().begin();
          it != this->_internal_stream_info().end(); ++it) {
        target = StreamInfo_StreamInfoEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.StreamInfo)
  return target;
}

size_t StreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.StreamInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> stream_info = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_stream_info_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_stream_info().begin();
      it != this->_internal_stream_info().end(); ++it) {
    total_size += StreamInfo_StreamInfoEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string stream_name = 1;
  if (this->stream_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.StreamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.StreamInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.StreamInfo)
    MergeFrom(*source);
  }
}

void StreamInfo::MergeFrom(const StreamInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.StreamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stream_info_.MergeFrom(from.stream_info_);
  if (from.stream_name().size() > 0) {

    stream_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.stream_name_);
  }
}

void StreamInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.StreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamInfo::CopyFrom(const StreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.StreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamInfo::IsInitialized() const {
  return true;
}

void StreamInfo::InternalSwap(StreamInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  stream_info_.Swap(&other->stream_info_);
  stream_name_.Swap(&other->stream_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AudioMixMuteUnMute::InitAsDefaultInstance() {
}
class AudioMixMuteUnMute::_Internal {
 public:
};

AudioMixMuteUnMute::AudioMixMuteUnMute()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.AudioMixMuteUnMute)
}
AudioMixMuteUnMute::AudioMixMuteUnMute(const AudioMixMuteUnMute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      mute_input_urls_(from.mute_input_urls_),
      unmute_input_urls_(from.unmute_input_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IalRequest.AudioMixMuteUnMute)
}

void AudioMixMuteUnMute::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AudioMixMuteUnMute_ialRequest_2eproto.base);
}

AudioMixMuteUnMute::~AudioMixMuteUnMute() {
  // @@protoc_insertion_point(destructor:IalRequest.AudioMixMuteUnMute)
  SharedDtor();
}

void AudioMixMuteUnMute::SharedDtor() {
}

void AudioMixMuteUnMute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AudioMixMuteUnMute& AudioMixMuteUnMute::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AudioMixMuteUnMute_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void AudioMixMuteUnMute::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.AudioMixMuteUnMute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mute_input_urls_.Clear();
  unmute_input_urls_.Clear();
  _internal_metadata_.Clear();
}

const char* AudioMixMuteUnMute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string mute_input_urls = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_mute_input_urls(), ptr, ctx, "IalRequest.AudioMixMuteUnMute.mute_input_urls");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string unmute_input_urls = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_unmute_input_urls(), ptr, ctx, "IalRequest.AudioMixMuteUnMute.unmute_input_urls");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AudioMixMuteUnMute::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.AudioMixMuteUnMute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string mute_input_urls = 1;
  for (int i = 0, n = this->_internal_mute_input_urls_size(); i < n; i++) {
    const auto& s = this->_internal_mute_input_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.AudioMixMuteUnMute.mute_input_urls");
    target = stream->WriteString(1, s, target);
  }

  // repeated string unmute_input_urls = 2;
  for (int i = 0, n = this->_internal_unmute_input_urls_size(); i < n; i++) {
    const auto& s = this->_internal_unmute_input_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.AudioMixMuteUnMute.unmute_input_urls");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.AudioMixMuteUnMute)
  return target;
}

size_t AudioMixMuteUnMute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.AudioMixMuteUnMute)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mute_input_urls = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mute_input_urls_.size());
  for (int i = 0, n = mute_input_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mute_input_urls_.Get(i));
  }

  // repeated string unmute_input_urls = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(unmute_input_urls_.size());
  for (int i = 0, n = unmute_input_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      unmute_input_urls_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioMixMuteUnMute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.AudioMixMuteUnMute)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioMixMuteUnMute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AudioMixMuteUnMute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.AudioMixMuteUnMute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.AudioMixMuteUnMute)
    MergeFrom(*source);
  }
}

void AudioMixMuteUnMute::MergeFrom(const AudioMixMuteUnMute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.AudioMixMuteUnMute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mute_input_urls_.MergeFrom(from.mute_input_urls_);
  unmute_input_urls_.MergeFrom(from.unmute_input_urls_);
}

void AudioMixMuteUnMute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.AudioMixMuteUnMute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioMixMuteUnMute::CopyFrom(const AudioMixMuteUnMute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.AudioMixMuteUnMute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioMixMuteUnMute::IsInitialized() const {
  return true;
}

void AudioMixMuteUnMute::InternalSwap(AudioMixMuteUnMute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  mute_input_urls_.InternalSwap(&other->mute_input_urls_);
  unmute_input_urls_.InternalSwap(&other->unmute_input_urls_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioMixMuteUnMute::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VideoMixChangeLayout::InitAsDefaultInstance() {
  ::IalRequest::_VideoMixChangeLayout_default_instance_._instance.get_mutable()->new_layout_ = const_cast< ::DavWaveSetting::VideoMixLayoutUpdate*>(
      ::DavWaveSetting::VideoMixLayoutUpdate::internal_default_instance());
}
class VideoMixChangeLayout::_Internal {
 public:
  static const ::DavWaveSetting::VideoMixLayoutUpdate& new_layout(const VideoMixChangeLayout* msg);
};

const ::DavWaveSetting::VideoMixLayoutUpdate&
VideoMixChangeLayout::_Internal::new_layout(const VideoMixChangeLayout* msg) {
  return *msg->new_layout_;
}
void VideoMixChangeLayout::clear_new_layout() {
  if (GetArenaNoVirtual() == nullptr && new_layout_ != nullptr) {
    delete new_layout_;
  }
  new_layout_ = nullptr;
}
VideoMixChangeLayout::VideoMixChangeLayout()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.VideoMixChangeLayout)
}
VideoMixChangeLayout::VideoMixChangeLayout(const VideoMixChangeLayout& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_new_layout()) {
    new_layout_ = new ::DavWaveSetting::VideoMixLayoutUpdate(*from.new_layout_);
  } else {
    new_layout_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.VideoMixChangeLayout)
}

void VideoMixChangeLayout::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VideoMixChangeLayout_ialRequest_2eproto.base);
  new_layout_ = nullptr;
}

VideoMixChangeLayout::~VideoMixChangeLayout() {
  // @@protoc_insertion_point(destructor:IalRequest.VideoMixChangeLayout)
  SharedDtor();
}

void VideoMixChangeLayout::SharedDtor() {
  if (this != internal_default_instance()) delete new_layout_;
}

void VideoMixChangeLayout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VideoMixChangeLayout& VideoMixChangeLayout::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VideoMixChangeLayout_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void VideoMixChangeLayout::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.VideoMixChangeLayout)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && new_layout_ != nullptr) {
    delete new_layout_;
  }
  new_layout_ = nullptr;
  _internal_metadata_.Clear();
}

const char* VideoMixChangeLayout::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .DavWaveSetting.VideoMixLayoutUpdate new_layout = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_layout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VideoMixChangeLayout::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.VideoMixChangeLayout)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DavWaveSetting.VideoMixLayoutUpdate new_layout = 1;
  if (this->has_new_layout()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::new_layout(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.VideoMixChangeLayout)
  return target;
}

size_t VideoMixChangeLayout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.VideoMixChangeLayout)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .DavWaveSetting.VideoMixLayoutUpdate new_layout = 1;
  if (this->has_new_layout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_layout_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VideoMixChangeLayout::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.VideoMixChangeLayout)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoMixChangeLayout* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VideoMixChangeLayout>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.VideoMixChangeLayout)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.VideoMixChangeLayout)
    MergeFrom(*source);
  }
}

void VideoMixChangeLayout::MergeFrom(const VideoMixChangeLayout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.VideoMixChangeLayout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_new_layout()) {
    _internal_mutable_new_layout()->::DavWaveSetting::VideoMixLayoutUpdate::MergeFrom(from._internal_new_layout());
  }
}

void VideoMixChangeLayout::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.VideoMixChangeLayout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoMixChangeLayout::CopyFrom(const VideoMixChangeLayout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.VideoMixChangeLayout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoMixChangeLayout::IsInitialized() const {
  return true;
}

void VideoMixChangeLayout::InternalSwap(VideoMixChangeLayout* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(new_layout_, other->new_layout_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoMixChangeLayout::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VideoMixUpdateBackgroud::InitAsDefaultInstance() {
}
class VideoMixUpdateBackgroud::_Internal {
 public:
};

VideoMixUpdateBackgroud::VideoMixUpdateBackgroud()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.VideoMixUpdateBackgroud)
}
VideoMixUpdateBackgroud::VideoMixUpdateBackgroud(const VideoMixUpdateBackgroud& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  backgroud_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_backgroud_image_url().empty()) {
    backgroud_image_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.backgroud_image_url_);
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.VideoMixUpdateBackgroud)
}

void VideoMixUpdateBackgroud::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VideoMixUpdateBackgroud_ialRequest_2eproto.base);
  backgroud_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VideoMixUpdateBackgroud::~VideoMixUpdateBackgroud() {
  // @@protoc_insertion_point(destructor:IalRequest.VideoMixUpdateBackgroud)
  SharedDtor();
}

void VideoMixUpdateBackgroud::SharedDtor() {
  backgroud_image_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VideoMixUpdateBackgroud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VideoMixUpdateBackgroud& VideoMixUpdateBackgroud::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VideoMixUpdateBackgroud_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void VideoMixUpdateBackgroud::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.VideoMixUpdateBackgroud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backgroud_image_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* VideoMixUpdateBackgroud::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string backgroud_image_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_backgroud_image_url(), ptr, ctx, "IalRequest.VideoMixUpdateBackgroud.backgroud_image_url");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VideoMixUpdateBackgroud::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.VideoMixUpdateBackgroud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string backgroud_image_url = 1;
  if (this->backgroud_image_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backgroud_image_url().data(), static_cast<int>(this->_internal_backgroud_image_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.VideoMixUpdateBackgroud.backgroud_image_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_backgroud_image_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.VideoMixUpdateBackgroud)
  return target;
}

size_t VideoMixUpdateBackgroud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.VideoMixUpdateBackgroud)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string backgroud_image_url = 1;
  if (this->backgroud_image_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_backgroud_image_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VideoMixUpdateBackgroud::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.VideoMixUpdateBackgroud)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoMixUpdateBackgroud* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VideoMixUpdateBackgroud>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.VideoMixUpdateBackgroud)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.VideoMixUpdateBackgroud)
    MergeFrom(*source);
  }
}

void VideoMixUpdateBackgroud::MergeFrom(const VideoMixUpdateBackgroud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.VideoMixUpdateBackgroud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.backgroud_image_url().size() > 0) {

    backgroud_image_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.backgroud_image_url_);
  }
}

void VideoMixUpdateBackgroud::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.VideoMixUpdateBackgroud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoMixUpdateBackgroud::CopyFrom(const VideoMixUpdateBackgroud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.VideoMixUpdateBackgroud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoMixUpdateBackgroud::IsInitialized() const {
  return true;
}

void VideoMixUpdateBackgroud::InternalSwap(VideoMixUpdateBackgroud* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  backgroud_image_url_.Swap(&other->backgroud_image_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoMixUpdateBackgroud::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateInputSetting::InitAsDefaultInstance() {
  ::IalRequest::_UpdateInputSetting_default_instance_._instance.get_mutable()->input_setting_ = const_cast< ::DavStreamletSetting::InputStreamletSetting*>(
      ::DavStreamletSetting::InputStreamletSetting::internal_default_instance());
}
class UpdateInputSetting::_Internal {
 public:
  static const ::DavStreamletSetting::InputStreamletSetting& input_setting(const UpdateInputSetting* msg);
};

const ::DavStreamletSetting::InputStreamletSetting&
UpdateInputSetting::_Internal::input_setting(const UpdateInputSetting* msg) {
  return *msg->input_setting_;
}
void UpdateInputSetting::clear_input_setting() {
  if (GetArenaNoVirtual() == nullptr && input_setting_ != nullptr) {
    delete input_setting_;
  }
  input_setting_ = nullptr;
}
UpdateInputSetting::UpdateInputSetting()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.UpdateInputSetting)
}
UpdateInputSetting::UpdateInputSetting(const UpdateInputSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_input_setting()) {
    input_setting_ = new ::DavStreamletSetting::InputStreamletSetting(*from.input_setting_);
  } else {
    input_setting_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.UpdateInputSetting)
}

void UpdateInputSetting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateInputSetting_ialRequest_2eproto.base);
  input_setting_ = nullptr;
}

UpdateInputSetting::~UpdateInputSetting() {
  // @@protoc_insertion_point(destructor:IalRequest.UpdateInputSetting)
  SharedDtor();
}

void UpdateInputSetting::SharedDtor() {
  if (this != internal_default_instance()) delete input_setting_;
}

void UpdateInputSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateInputSetting& UpdateInputSetting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateInputSetting_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void UpdateInputSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.UpdateInputSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && input_setting_ != nullptr) {
    delete input_setting_;
  }
  input_setting_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateInputSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .DavStreamletSetting.InputStreamletSetting input_setting = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_input_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateInputSetting::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.UpdateInputSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DavStreamletSetting.InputStreamletSetting input_setting = 1;
  if (this->has_input_setting()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::input_setting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.UpdateInputSetting)
  return target;
}

size_t UpdateInputSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.UpdateInputSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .DavStreamletSetting.InputStreamletSetting input_setting = 1;
  if (this->has_input_setting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_setting_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateInputSetting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.UpdateInputSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInputSetting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateInputSetting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.UpdateInputSetting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.UpdateInputSetting)
    MergeFrom(*source);
  }
}

void UpdateInputSetting::MergeFrom(const UpdateInputSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.UpdateInputSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input_setting()) {
    _internal_mutable_input_setting()->::DavStreamletSetting::InputStreamletSetting::MergeFrom(from._internal_input_setting());
  }
}

void UpdateInputSetting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.UpdateInputSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInputSetting::CopyFrom(const UpdateInputSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.UpdateInputSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInputSetting::IsInitialized() const {
  return true;
}

void UpdateInputSetting::InternalSwap(UpdateInputSetting* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(input_setting_, other->input_setting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInputSetting::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOutputSetting::InitAsDefaultInstance() {
  ::IalRequest::_AddOutputSetting_default_instance_._instance.get_mutable()->output_setting_ = const_cast< ::DavStreamletSetting::OutputStreamletSetting*>(
      ::DavStreamletSetting::OutputStreamletSetting::internal_default_instance());
}
class AddOutputSetting::_Internal {
 public:
  static const ::DavStreamletSetting::OutputStreamletSetting& output_setting(const AddOutputSetting* msg);
};

const ::DavStreamletSetting::OutputStreamletSetting&
AddOutputSetting::_Internal::output_setting(const AddOutputSetting* msg) {
  return *msg->output_setting_;
}
void AddOutputSetting::clear_output_setting() {
  if (GetArenaNoVirtual() == nullptr && output_setting_ != nullptr) {
    delete output_setting_;
  }
  output_setting_ = nullptr;
}
AddOutputSetting::AddOutputSetting()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.AddOutputSetting)
}
AddOutputSetting::AddOutputSetting(const AddOutputSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_setting_id().empty()) {
    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  if (from._internal_has_output_setting()) {
    output_setting_ = new ::DavStreamletSetting::OutputStreamletSetting(*from.output_setting_);
  } else {
    output_setting_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.AddOutputSetting)
}

void AddOutputSetting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOutputSetting_ialRequest_2eproto.base);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_setting_ = nullptr;
}

AddOutputSetting::~AddOutputSetting() {
  // @@protoc_insertion_point(destructor:IalRequest.AddOutputSetting)
  SharedDtor();
}

void AddOutputSetting::SharedDtor() {
  output_setting_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete output_setting_;
}

void AddOutputSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOutputSetting& AddOutputSetting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOutputSetting_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void AddOutputSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.AddOutputSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_setting_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && output_setting_ != nullptr) {
    delete output_setting_;
  }
  output_setting_ = nullptr;
  _internal_metadata_.Clear();
}

const char* AddOutputSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string output_setting_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_output_setting_id(), ptr, ctx, "IalRequest.AddOutputSetting.output_setting_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DavStreamletSetting.OutputStreamletSetting output_setting = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOutputSetting::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.AddOutputSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_setting_id().data(), static_cast<int>(this->_internal_output_setting_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.AddOutputSetting.output_setting_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_output_setting_id(), target);
  }

  // .DavStreamletSetting.OutputStreamletSetting output_setting = 2;
  if (this->has_output_setting()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::output_setting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.AddOutputSetting)
  return target;
}

size_t AddOutputSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.AddOutputSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_setting_id());
  }

  // .DavStreamletSetting.OutputStreamletSetting output_setting = 2;
  if (this->has_output_setting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *output_setting_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOutputSetting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.AddOutputSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOutputSetting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOutputSetting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.AddOutputSetting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.AddOutputSetting)
    MergeFrom(*source);
  }
}

void AddOutputSetting::MergeFrom(const AddOutputSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.AddOutputSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_setting_id().size() > 0) {

    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  if (from.has_output_setting()) {
    _internal_mutable_output_setting()->::DavStreamletSetting::OutputStreamletSetting::MergeFrom(from._internal_output_setting());
  }
}

void AddOutputSetting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.AddOutputSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOutputSetting::CopyFrom(const AddOutputSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.AddOutputSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOutputSetting::IsInitialized() const {
  return true;
}

void AddOutputSetting::InternalSwap(AddOutputSetting* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_setting_id_.Swap(&other->output_setting_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(output_setting_, other->output_setting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOutputSetting::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateMixSetting::InitAsDefaultInstance() {
  ::IalRequest::_UpdateMixSetting_default_instance_._instance.get_mutable()->mix_setting_ = const_cast< ::DavStreamletSetting::MixStreamletSetting*>(
      ::DavStreamletSetting::MixStreamletSetting::internal_default_instance());
}
class UpdateMixSetting::_Internal {
 public:
  static const ::DavStreamletSetting::MixStreamletSetting& mix_setting(const UpdateMixSetting* msg);
};

const ::DavStreamletSetting::MixStreamletSetting&
UpdateMixSetting::_Internal::mix_setting(const UpdateMixSetting* msg) {
  return *msg->mix_setting_;
}
void UpdateMixSetting::clear_mix_setting() {
  if (GetArenaNoVirtual() == nullptr && mix_setting_ != nullptr) {
    delete mix_setting_;
  }
  mix_setting_ = nullptr;
}
UpdateMixSetting::UpdateMixSetting()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IalRequest.UpdateMixSetting)
}
UpdateMixSetting::UpdateMixSetting(const UpdateMixSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_setting_id().empty()) {
    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  if (from._internal_has_mix_setting()) {
    mix_setting_ = new ::DavStreamletSetting::MixStreamletSetting(*from.mix_setting_);
  } else {
    mix_setting_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IalRequest.UpdateMixSetting)
}

void UpdateMixSetting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateMixSetting_ialRequest_2eproto.base);
  output_setting_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mix_setting_ = nullptr;
}

UpdateMixSetting::~UpdateMixSetting() {
  // @@protoc_insertion_point(destructor:IalRequest.UpdateMixSetting)
  SharedDtor();
}

void UpdateMixSetting::SharedDtor() {
  output_setting_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mix_setting_;
}

void UpdateMixSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateMixSetting& UpdateMixSetting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateMixSetting_ialRequest_2eproto.base);
  return *internal_default_instance();
}


void UpdateMixSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:IalRequest.UpdateMixSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_setting_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mix_setting_ != nullptr) {
    delete mix_setting_;
  }
  mix_setting_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateMixSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string output_setting_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_output_setting_id(), ptr, ctx, "IalRequest.UpdateMixSetting.output_setting_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DavStreamletSetting.MixStreamletSetting mix_setting = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mix_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateMixSetting::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IalRequest.UpdateMixSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_setting_id().data(), static_cast<int>(this->_internal_output_setting_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IalRequest.UpdateMixSetting.output_setting_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_output_setting_id(), target);
  }

  // .DavStreamletSetting.MixStreamletSetting mix_setting = 2;
  if (this->has_mix_setting()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::mix_setting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IalRequest.UpdateMixSetting)
  return target;
}

size_t UpdateMixSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IalRequest.UpdateMixSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_setting_id = 1;
  if (this->output_setting_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_setting_id());
  }

  // .DavStreamletSetting.MixStreamletSetting mix_setting = 2;
  if (this->has_mix_setting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mix_setting_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMixSetting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IalRequest.UpdateMixSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMixSetting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateMixSetting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IalRequest.UpdateMixSetting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IalRequest.UpdateMixSetting)
    MergeFrom(*source);
  }
}

void UpdateMixSetting::MergeFrom(const UpdateMixSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IalRequest.UpdateMixSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_setting_id().size() > 0) {

    output_setting_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_setting_id_);
  }
  if (from.has_mix_setting()) {
    _internal_mutable_mix_setting()->::DavStreamletSetting::MixStreamletSetting::MergeFrom(from._internal_mix_setting());
  }
}

void UpdateMixSetting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IalRequest.UpdateMixSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMixSetting::CopyFrom(const UpdateMixSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IalRequest.UpdateMixSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMixSetting::IsInitialized() const {
  return true;
}

void UpdateMixSetting::InternalSwap(UpdateMixSetting* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_setting_id_.Swap(&other->output_setting_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mix_setting_, other->mix_setting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateMixSetting::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IalRequest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::IalRequest::CreateRoom* Arena::CreateMaybeMessage< ::IalRequest::CreateRoom >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::CreateRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::AddNewInputStream* Arena::CreateMaybeMessage< ::IalRequest::AddNewInputStream >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::AddNewInputStream >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::CloseOneInputStream* Arena::CreateMaybeMessage< ::IalRequest::CloseOneInputStream >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::CloseOneInputStream >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::GetOneInputStreamInfo* Arena::CreateMaybeMessage< ::IalRequest::GetOneInputStreamInfo >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::GetOneInputStreamInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::GetAllInputStreamInfos* Arena::CreateMaybeMessage< ::IalRequest::GetAllInputStreamInfos >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::GetAllInputStreamInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::AddNewOutput* Arena::CreateMaybeMessage< ::IalRequest::AddNewOutput >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::AddNewOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::CloseOneOutput* Arena::CreateMaybeMessage< ::IalRequest::CloseOneOutput >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::CloseOneOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::GetOneOutputStreamInfo* Arena::CreateMaybeMessage< ::IalRequest::GetOneOutputStreamInfo >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::GetOneOutputStreamInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::GetAllOutputStreamInfos* Arena::CreateMaybeMessage< ::IalRequest::GetAllOutputStreamInfos >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::GetAllOutputStreamInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse* Arena::CreateMaybeMessage< ::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::StreamInfo_StreamInfoEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::StreamInfo* Arena::CreateMaybeMessage< ::IalRequest::StreamInfo >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::StreamInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::AudioMixMuteUnMute* Arena::CreateMaybeMessage< ::IalRequest::AudioMixMuteUnMute >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::AudioMixMuteUnMute >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::VideoMixChangeLayout* Arena::CreateMaybeMessage< ::IalRequest::VideoMixChangeLayout >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::VideoMixChangeLayout >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::VideoMixUpdateBackgroud* Arena::CreateMaybeMessage< ::IalRequest::VideoMixUpdateBackgroud >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::VideoMixUpdateBackgroud >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::UpdateInputSetting* Arena::CreateMaybeMessage< ::IalRequest::UpdateInputSetting >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::UpdateInputSetting >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::AddOutputSetting* Arena::CreateMaybeMessage< ::IalRequest::AddOutputSetting >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::AddOutputSetting >(arena);
}
template<> PROTOBUF_NOINLINE ::IalRequest::UpdateMixSetting* Arena::CreateMaybeMessage< ::IalRequest::UpdateMixSetting >(Arena* arena) {
  return Arena::CreateInternal< ::IalRequest::UpdateMixSetting >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
